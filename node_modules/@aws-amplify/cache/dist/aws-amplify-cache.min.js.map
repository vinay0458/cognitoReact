{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"@aws-amplify/core\"","webpack:///./lib-esm/Utils/CacheUtils.js","webpack:///./lib-esm/Utils/CacheList.js","webpack:///./lib-esm/StorageCache.js","webpack:///./lib-esm/BrowserStorageCache.js","webpack:///./lib-esm/InMemoryCache.js","webpack:///./lib-esm/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultConfig","keyPrefix","capacityInBytes","itemMaxSize","defaultTTL","defaultPriority","warningThreshold","storage","getByteLength","str","ret","charCode","getCurrTime","isInteger","Number","isFinite","Math","_isInteger","store","CacheObject","DoubleLinkedNode","this","keyVal","CacheList","node","tmp","head","length","hashtable","tail","prevNode","removedItem","_i","_a","extendStatics","logger","config","StorageCache","options","data","timestamp","visitedTime","priority","expires","type","byteSize","JSON","__extends","__proto__","b","__","_super","_this","cacheConfig","BrowserStorageCache","amount","curSize","item","prefixedKey","text","getItem","size","itemSize","setItemErr","spaceItemNeed","getCacheCurSize","cacheThresholdSpace","keys","keyInCache","_isExpired","sizeToPop","items","remainedSize","val","a","cacheItemOptions","fillCacheItem","_isCacheFull","validKeys","_sizeToPop","e","_refreshItem","keysToRemove","InMemoryCache","listIdx","curSizeInBytes","cacheList","containsKey","presentKeyPrio","cacheListIdx","maxPriority","popedItemKey","Amplify"],"mappings":"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","file":"aws-amplify-cache.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aws-amplify/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_cache\", [\"@aws-amplify/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_cache\"] = factory(require(\"@aws-amplify/core\"));\n\telse\n\t\troot[\"aws_amplify_cache\"] = factory(root[\"@aws-amplify/core\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { StorageHelper } from '@aws-amplify/core';\n/**\n * Default cache config\n */\nexport var defaultConfig = {\n    keyPrefix: 'aws-amplify-cache',\n    capacityInBytes: 1048576,\n    itemMaxSize: 210000,\n    defaultTTL: 259200000,\n    defaultPriority: 5,\n    warningThreshold: 0.8,\n    // the storage helper will check if localStorage exists,\n    // if not, will use a in-memory object instead\n    storage: new StorageHelper().getStorage(),\n};\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n    var ret = 0;\n    ret = str.length;\n    for (var i = str.length; i >= 0; i -= 1) {\n        var charCode = str.charCodeAt(i);\n        if (charCode > 0x7f && charCode <= 0x7ff) {\n            ret += 1;\n        }\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\n            ret += 2;\n        }\n        // trail surrogate\n        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n            i -= 1;\n        }\n    }\n    return ret;\n}\n/**\n * get current time\n */\nexport function getCurrTime() {\n    var currTime = new Date();\n    return currTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return _isInteger(value);\n}\nfunction _isInteger(value) {\n    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n}\n/**\n * provide an object as the in-memory cache\n */\nvar store = {};\nvar CacheObject = /** @class */ (function () {\n    function CacheObject() {\n    }\n    CacheObject.clear = function () {\n        store = {};\n    };\n    CacheObject.getItem = function (key) {\n        return store[key] || null;\n    };\n    CacheObject.setItem = function (key, value) {\n        store[key] = value;\n    };\n    CacheObject.removeItem = function (key) {\n        delete store[key];\n    };\n    return CacheObject;\n}());\nexport { CacheObject };\n//# sourceMappingURL=CacheUtils.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar DoubleLinkedNode = /** @class */ (function () {\n    function DoubleLinkedNode(keyVal) {\n        this.key = keyVal ? keyVal : '';\n        this.prevNode = null;\n        this.nextNode = null;\n    }\n    return DoubleLinkedNode;\n}());\n/**\n * double linked list plus a hash table inside\n * each key in the cache stored as a node in the list\n * recently visited node will be rotated to the head\n * so the Last Recently Visited node will be at the tail\n *\n * @member head - dummy head of the linked list\n * @member tail - dummy tail of the linked list\n * @member hashtable - the hashtable which maps cache key to list node\n * @member length - length of the list\n */\nvar CacheList = /** @class */ (function () {\n    /**\n     * initialization\n     */\n    function CacheList() {\n        this.head = new DoubleLinkedNode();\n        this.tail = new DoubleLinkedNode();\n        this.hashtable = {};\n        this.length = 0;\n        this.head.nextNode = this.tail;\n        this.tail.prevNode = this.head;\n    }\n    /**\n     * insert node to the head of the list\n     *\n     * @param node\n     */\n    CacheList.prototype.insertNodeToHead = function (node) {\n        var tmp = this.head.nextNode;\n        this.head.nextNode = node;\n        node.nextNode = tmp;\n        node.prevNode = this.head;\n        tmp.prevNode = node;\n        this.length = this.length + 1;\n    };\n    /**\n     * remove node\n     *\n     * @param node\n     */\n    CacheList.prototype.removeNode = function (node) {\n        node.prevNode.nextNode = node.nextNode;\n        node.nextNode.prevNode = node.prevNode;\n        node.prevNode = null;\n        node.nextNode = null;\n        this.length = this.length - 1;\n    };\n    /**\n     * @return true if list is empty\n     */\n    CacheList.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    /**\n     * refresh node so it is rotated to the head\n     *\n     * @param key - key of the node\n     */\n    CacheList.prototype.refresh = function (key) {\n        var node = this.hashtable[key];\n        this.removeNode(node);\n        this.insertNodeToHead(node);\n    };\n    /**\n     * insert new node to the head and add it in the hashtable\n     *\n     * @param key - the key of the node\n     */\n    CacheList.prototype.insertItem = function (key) {\n        var node = new DoubleLinkedNode(key);\n        this.hashtable[key] = node;\n        this.insertNodeToHead(node);\n    };\n    /**\n     * @return the LAST Recently Visited key\n     */\n    CacheList.prototype.getLastItem = function () {\n        return this.tail.prevNode.key;\n    };\n    /**\n     * remove the cache key from the list and hashtable\n     * @param key - the key of the node\n     */\n    CacheList.prototype.removeItem = function (key) {\n        var removedItem = this.hashtable[key];\n        this.removeNode(removedItem);\n        delete this.hashtable[key];\n    };\n    /**\n     * @return length of the list\n     */\n    CacheList.prototype.getSize = function () {\n        return this.length;\n    };\n    /**\n     * @return true if the key is in the hashtable\n     * @param key\n     */\n    CacheList.prototype.containsKey = function (key) {\n        return key in this.hashtable;\n    };\n    /**\n     * clean up the list and hashtable\n     */\n    CacheList.prototype.clearList = function () {\n        for (var _i = 0, _a = Object.keys(this.hashtable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (this.hashtable.hasOwnProperty(key)) {\n                delete this.hashtable[key];\n            }\n        }\n        this.head.nextNode = this.tail;\n        this.tail.prevNode = this.head;\n        this.length = 0;\n    };\n    /**\n     * @return all keys in the hashtable\n     */\n    CacheList.prototype.getKeys = function () {\n        return Object.keys(this.hashtable);\n    };\n    /**\n     * mainly for test\n     *\n     * @param key\n     * @return true if key is the head node\n     */\n    CacheList.prototype.isHeadNode = function (key) {\n        var node = this.hashtable[key];\n        return node.prevNode === this.head;\n    };\n    /**\n     * mainly for test\n     *\n     * @param key\n     * @return true if key is the tail node\n     */\n    CacheList.prototype.isTailNode = function (key) {\n        var node = this.hashtable[key];\n        return node.nextNode === this.tail;\n    };\n    return CacheList;\n}());\nexport default CacheList;\n//# sourceMappingURL=CacheList.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nvar StorageCache = /** @class */ (function () {\n    /**\n     * Initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function StorageCache(config) {\n        this.config = Object.assign({}, config);\n        this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n        this.checkConfig();\n    }\n    StorageCache.prototype.getModuleName = function () {\n        return 'Cache';\n    };\n    StorageCache.prototype.checkConfig = function () {\n        // check configuration\n        if (!isInteger(this.config.capacityInBytes)) {\n            logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n        if (!isInteger(this.config.itemMaxSize)) {\n            logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (!isInteger(this.config.defaultTTL)) {\n            logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n            this.config.defaultTTL = defaultConfig.defaultTTL;\n        }\n        if (!isInteger(this.config.defaultPriority)) {\n            logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // set 5MB limit\n        var cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    };\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    StorageCache.prototype.fillCacheItem = function (key, value, options) {\n        var ret = {\n            key: key,\n            data: value,\n            timestamp: getCurrTime(),\n            visitedTime: getCurrTime(),\n            priority: options.priority,\n            expires: options.expires,\n            type: typeof value,\n            byteSize: 0,\n        };\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        // for accurate size\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        return ret;\n    };\n    /**\n     * set cache with customized configuration\n     * @param config - customized configuration\n     *\n     * @return - the current configuration\n     */\n    StorageCache.prototype.configure = function (config) {\n        if (!config) {\n            return this.config;\n        }\n        if (config.keyPrefix) {\n            logger.warn(\"Don't try to configure keyPrefix!\");\n        }\n        this.config = Object.assign({}, this.config, config, config.Cache);\n        this.checkConfig();\n        return this.config;\n    };\n    return StorageCache;\n}());\nexport default StorageCache;\n//# sourceMappingURL=StorageCache.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { defaultConfig, getCurrTime } from './Utils';\nimport StorageCache from './StorageCache';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('Cache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nvar BrowserStorageCache = /** @class */ (function (_super) {\n    __extends(BrowserStorageCache, _super);\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function BrowserStorageCache(config) {\n        var _this = this;\n        var cacheConfig = config\n            ? Object.assign({}, defaultConfig, config)\n            : defaultConfig;\n        _this = _super.call(this, cacheConfig) || this;\n        _this.config.storage = cacheConfig.storage;\n        _this.getItem = _this.getItem.bind(_this);\n        _this.setItem = _this.setItem.bind(_this);\n        _this.removeItem = _this.removeItem.bind(_this);\n        return _this;\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @private\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    BrowserStorageCache.prototype._decreaseCurSizeInBytes = function (amount) {\n        var curSize = this.getCacheCurSize();\n        this.config.storage.setItem(this.cacheCurSizeKey, (curSize - amount).toString());\n    };\n    /**\n     * increase current size of the cache\n     *\n     * @private\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    BrowserStorageCache.prototype._increaseCurSizeInBytes = function (amount) {\n        var curSize = this.getCacheCurSize();\n        this.config.storage.setItem(this.cacheCurSizeKey, (curSize + amount).toString());\n    };\n    /**\n     * update the visited time if item has been visited\n     *\n     * @private\n     * @param item - the item which need to be refreshed\n     * @param prefixedKey - the key of the item\n     *\n     * @return the refreshed item\n     */\n    BrowserStorageCache.prototype._refreshItem = function (item, prefixedKey) {\n        item.visitedTime = getCurrTime();\n        this.config.storage.setItem(prefixedKey, JSON.stringify(item));\n        return item;\n    };\n    /**\n     * check wether item is expired\n     *\n     * @private\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    BrowserStorageCache.prototype._isExpired = function (key) {\n        var text = this.config.storage.getItem(key);\n        var item = JSON.parse(text);\n        if (getCurrTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * delete item from cache\n     *\n     * @private\n     * @param prefixedKey - the key of the item\n     * @param size - optional, the byte size of the item\n     */\n    BrowserStorageCache.prototype._removeItem = function (prefixedKey, size) {\n        var itemSize = size\n            ? size\n            : JSON.parse(this.config.storage.getItem(prefixedKey)).byteSize;\n        this._decreaseCurSizeInBytes(itemSize);\n        // remove the cache item\n        this.config.storage.removeItem(prefixedKey);\n    };\n    /**\n     * put item into cache\n     *\n     * @private\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     */\n    BrowserStorageCache.prototype._setItem = function (prefixedKey, item) {\n        // update the cache size\n        this._increaseCurSizeInBytes(item.byteSize);\n        try {\n            this.config.storage.setItem(prefixedKey, JSON.stringify(item));\n        }\n        catch (setItemErr) {\n            // if failed, we need to rollback the cache size\n            this._decreaseCurSizeInBytes(item.byteSize);\n            logger.error(\"Failed to set item \" + setItemErr);\n        }\n    };\n    /**\n     * total space needed when poping out items\n     *\n     * @private\n     * @param itemSize\n     *\n     * @return total space needed\n     */\n    BrowserStorageCache.prototype._sizeToPop = function (itemSize) {\n        var spaceItemNeed = this.getCacheCurSize() + itemSize - this.config.capacityInBytes;\n        var cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n        return spaceItemNeed > cacheThresholdSpace\n            ? spaceItemNeed\n            : cacheThresholdSpace;\n    };\n    /**\n     * see whether cache is full\n     *\n     * @private\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    BrowserStorageCache.prototype._isCacheFull = function (itemSize) {\n        return itemSize + this.getCacheCurSize() > this.config.capacityInBytes;\n    };\n    /**\n     * scan the storage and find out all the keys owned by this cache\n     * also clean the expired keys while scanning\n     *\n     * @private\n     *\n     * @return array of keys\n     */\n    BrowserStorageCache.prototype._findValidKeys = function () {\n        var keys = [];\n        var keyInCache = [];\n        // get all keys in Storage\n        for (var i = 0; i < this.config.storage.length; i += 1) {\n            keyInCache.push(this.config.storage.key(i));\n        }\n        // find those items which belong to our cache and also clean those expired items\n        for (var i = 0; i < keyInCache.length; i += 1) {\n            var key = keyInCache[i];\n            if (key.indexOf(this.config.keyPrefix) === 0 &&\n                key !== this.cacheCurSizeKey) {\n                if (this._isExpired(key)) {\n                    this._removeItem(key);\n                }\n                else {\n                    keys.push(key);\n                }\n            }\n        }\n        return keys;\n    };\n    /**\n     * get all the items we have, sort them by their priority,\n     * if priority is same, sort them by their last visited time\n     * pop out items from the low priority (5 is the lowest)\n     *\n     * @private\n     * @param keys - all the keys in this cache\n     * @param sizeToPop - the total size of the items which needed to be poped out\n     */\n    BrowserStorageCache.prototype._popOutItems = function (keys, sizeToPop) {\n        var items = [];\n        var remainedSize = sizeToPop;\n        // get the items from Storage\n        for (var i = 0; i < keys.length; i += 1) {\n            var val = this.config.storage.getItem(keys[i]);\n            if (val != null) {\n                var item = JSON.parse(val);\n                items.push(item);\n            }\n        }\n        // first compare priority\n        // then compare visited time\n        items.sort(function (a, b) {\n            if (a.priority > b.priority) {\n                return -1;\n            }\n            else if (a.priority < b.priority) {\n                return 1;\n            }\n            else {\n                if (a.visitedTime < b.visitedTime) {\n                    return -1;\n                }\n                else\n                    return 1;\n            }\n        });\n        for (var i = 0; i < items.length; i += 1) {\n            // pop out items until we have enough room for new item\n            this._removeItem(items[i].key, items[i].byteSize);\n            remainedSize -= items[i].byteSize;\n            if (remainedSize <= 0) {\n                return;\n            }\n        }\n    };\n    /**\n     * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param key - the key of the item\n     * @param value - the value of the item\n     * @param {Object} [options] - optional, the specified meta-data\n     */\n    BrowserStorageCache.prototype.setItem = function (key, value, options) {\n        logger.log(\"Set item: key is \" + key + \", value is \" + value + \" with options: \" + options);\n        var prefixedKey = this.config.keyPrefix + key;\n        // invalid keys\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(\"The value of item should not be undefined!\");\n            return;\n        }\n        var cacheItemOptions = {\n            priority: options && options.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options && options.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(\"Invalid parameter: priority due to out or range. It should be within 1 and 5.\");\n            return;\n        }\n        var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check wether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(\"Item with key: \" + key + \" you are trying to put into is too big!\");\n            return;\n        }\n        try {\n            // first look into the storage, if it exists, delete it.\n            var val = this.config.storage.getItem(prefixedKey);\n            if (val) {\n                this._removeItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n            // check whether the cache is full\n            if (this._isCacheFull(item.byteSize)) {\n                var validKeys = this._findValidKeys();\n                // check again and then pop out items\n                if (this._isCacheFull(item.byteSize)) {\n                    var sizeToPop = this._sizeToPop(item.byteSize);\n                    this._popOutItems(validKeys, sizeToPop);\n                }\n            }\n            // put item in the cache\n            // may failed due to storage full\n            this._setItem(prefixedKey, item);\n        }\n        catch (e) {\n            logger.warn(\"setItem failed! \" + e);\n        }\n    };\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     * If error happened with browser storage\n     *\n     * @param key - the key of the item\n     * @param {Object} [options] - the options of callback function\n     *\n     * @return - return the value of the item\n     */\n    BrowserStorageCache.prototype.getItem = function (key, options) {\n        logger.log(\"Get item: key is \" + key + \" with options \" + options);\n        var ret = null;\n        var prefixedKey = this.config.keyPrefix + key;\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return null;\n        }\n        try {\n            ret = this.config.storage.getItem(prefixedKey);\n            if (ret != null) {\n                if (this._isExpired(prefixedKey)) {\n                    // if expired, remove that item and return null\n                    this._removeItem(prefixedKey, JSON.parse(ret).byteSize);\n                    ret = null;\n                }\n                else {\n                    // if not expired, great, return the value and refresh it\n                    var item = JSON.parse(ret);\n                    item = this._refreshItem(item, prefixedKey);\n                    return item.data;\n                }\n            }\n            if (options && options.callback !== undefined) {\n                var val = options.callback();\n                if (val !== null) {\n                    this.setItem(key, val, options);\n                }\n                return val;\n            }\n            return null;\n        }\n        catch (e) {\n            logger.warn(\"getItem failed! \" + e);\n            return null;\n        }\n    };\n    /**\n     * remove item from the cache\n     * The cache will abort output a warning:\n     * If error happened with browser storage\n     * @param key - the key of the item\n     */\n    BrowserStorageCache.prototype.removeItem = function (key) {\n        logger.log(\"Remove item: key is \" + key);\n        var prefixedKey = this.config.keyPrefix + key;\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            return;\n        }\n        try {\n            var val = this.config.storage.getItem(prefixedKey);\n            if (val) {\n                this._removeItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n        }\n        catch (e) {\n            logger.warn(\"removeItem failed! \" + e);\n        }\n    };\n    /**\n     * clear the entire cache\n     * The cache will abort output a warning:\n     * If error happened with browser storage\n     */\n    BrowserStorageCache.prototype.clear = function () {\n        logger.log(\"Clear Cache\");\n        var keysToRemove = [];\n        for (var i = 0; i < this.config.storage.length; i += 1) {\n            var key = this.config.storage.key(i);\n            if (key.indexOf(this.config.keyPrefix) === 0) {\n                keysToRemove.push(key);\n            }\n        }\n        try {\n            for (var i = 0; i < keysToRemove.length; i += 1) {\n                this.config.storage.removeItem(keysToRemove[i]);\n            }\n        }\n        catch (e) {\n            logger.warn(\"clear failed! \" + e);\n        }\n    };\n    /**\n     * Return all the keys in the cache.\n     *\n     * @return - all keys in the cache\n     */\n    BrowserStorageCache.prototype.getAllKeys = function () {\n        var keys = [];\n        for (var i = 0; i < this.config.storage.length; i += 1) {\n            var key = this.config.storage.key(i);\n            if (key.indexOf(this.config.keyPrefix) === 0 &&\n                key !== this.cacheCurSizeKey) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    };\n    /**\n     * return the current size of the cache\n     *\n     * @return - current size of the cache\n     */\n    BrowserStorageCache.prototype.getCacheCurSize = function () {\n        var ret = this.config.storage.getItem(this.cacheCurSizeKey);\n        if (!ret) {\n            this.config.storage.setItem(this.cacheCurSizeKey, '0');\n            ret = '0';\n        }\n        return Number(ret);\n    };\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param config - the customized configuration\n     *\n     * @return - new instance of Cache\n     */\n    BrowserStorageCache.prototype.createInstance = function (config) {\n        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = getCurrTime.toString();\n        }\n        return new BrowserStorageCache(config);\n    };\n    return BrowserStorageCache;\n}(StorageCache));\nexport { BrowserStorageCache };\nvar instance = new BrowserStorageCache();\nexport default instance;\n//# sourceMappingURL=BrowserStorageCache.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CacheList, defaultConfig, getCurrTime, CacheObject } from './Utils';\nimport StorageCache from './StorageCache';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('InMemoryCache');\n/**\n * Customized in-memory cache with LRU implemented\n * @member cacheObj - object which store items\n * @member cacheList - list of keys in the cache with LRU\n * @member curSizeInBytes - current size of the cache\n * @member maxPriority - max of the priority\n * @member cacheSizeLimit - the limit of cache size\n */\nvar InMemoryCache = /** @class */ (function (_super) {\n    __extends(InMemoryCache, _super);\n    /**\n     * initialize the cache\n     *\n     * @param config - the configuration of the cache\n     */\n    function InMemoryCache(config) {\n        var _this = this;\n        var cacheConfig = config\n            ? Object.assign({}, defaultConfig, config)\n            : defaultConfig;\n        _this = _super.call(this, cacheConfig) || this;\n        logger.debug('now we start!');\n        _this.cacheList = [];\n        _this.curSizeInBytes = 0;\n        _this.maxPriority = 5;\n        _this.getItem = _this.getItem.bind(_this);\n        _this.setItem = _this.setItem.bind(_this);\n        _this.removeItem = _this.removeItem.bind(_this);\n        // initialize list for every priority\n        for (var i = 0; i < _this.maxPriority; i += 1) {\n            _this.cacheList[i] = new CacheList();\n        }\n        return _this;\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    InMemoryCache.prototype._decreaseCurSizeInBytes = function (amount) {\n        this.curSizeInBytes -= amount;\n    };\n    /**\n     * increase current size of the cache\n     *\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    InMemoryCache.prototype._increaseCurSizeInBytes = function (amount) {\n        this.curSizeInBytes += amount;\n    };\n    /**\n     * check whether item is expired\n     *\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    InMemoryCache.prototype._isExpired = function (key) {\n        var text = CacheObject.getItem(key);\n        var item = JSON.parse(text);\n        if (getCurrTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * delete item from cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param listIdx - indicates which cache list the key belongs to\n     */\n    InMemoryCache.prototype._removeItem = function (prefixedKey, listIdx) {\n        // delete the key from the list\n        this.cacheList[listIdx].removeItem(prefixedKey);\n        // decrease the current size of the cache\n        this._decreaseCurSizeInBytes(JSON.parse(CacheObject.getItem(prefixedKey)).byteSize);\n        // finally remove the item from memory\n        CacheObject.removeItem(prefixedKey);\n    };\n    /**\n     * put item into cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     * @param listIdx - indicates which cache list the key belongs to\n     */\n    InMemoryCache.prototype._setItem = function (prefixedKey, item, listIdx) {\n        // insert the key into the list\n        this.cacheList[listIdx].insertItem(prefixedKey);\n        // increase the current size of the cache\n        this._increaseCurSizeInBytes(item.byteSize);\n        // finally add the item into memory\n        CacheObject.setItem(prefixedKey, JSON.stringify(item));\n    };\n    /**\n     * see whether cache is full\n     *\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    InMemoryCache.prototype._isCacheFull = function (itemSize) {\n        return this.curSizeInBytes + itemSize > this.config.capacityInBytes;\n    };\n    /**\n     * check whether the cache contains the key\n     *\n     * @param key\n     */\n    InMemoryCache.prototype.containsKey = function (key) {\n        var prefixedKey = this.config.keyPrefix + key;\n        for (var i = 0; i < this.maxPriority; i += 1) {\n            if (this.cacheList[i].containsKey(prefixedKey)) {\n                return i + 1;\n            }\n        }\n        return -1;\n    };\n    /**\n     * * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param key - the key of the item\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @throws if the item is too big which exceeds the limit of single item size\n     * @throws if the key is invalid\n     */\n    InMemoryCache.prototype.setItem = function (key, value, options) {\n        var prefixedKey = this.config.keyPrefix + key;\n        // invalid keys\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(\"The value of item should not be undefined!\");\n            return;\n        }\n        var cacheItemOptions = {\n            priority: options && options.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options && options.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(\"Invalid parameter: priority due to out or range. It should be within 1 and 5.\");\n            return;\n        }\n        var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check wether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(\"Item with key: \" + key + \" you are trying to put into is too big!\");\n            return;\n        }\n        // if key already in the cache, then delete it.\n        var presentKeyPrio = this.containsKey(key);\n        if (presentKeyPrio !== -1) {\n            this._removeItem(prefixedKey, presentKeyPrio - 1);\n        }\n        // pop out items in the cache when cache is full based on LRU\n        // first start from lowest priority cache list\n        var cacheListIdx = this.maxPriority - 1;\n        while (this._isCacheFull(item.byteSize) && cacheListIdx >= 0) {\n            if (!this.cacheList[cacheListIdx].isEmpty()) {\n                var popedItemKey = this.cacheList[cacheListIdx].getLastItem();\n                this._removeItem(popedItemKey, cacheListIdx);\n            }\n            else {\n                cacheListIdx -= 1;\n            }\n        }\n        this._setItem(prefixedKey, item, Number(item.priority) - 1);\n    };\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     *\n     * @param key - the key of the item\n     * @param options - the options of callback function\n     */\n    InMemoryCache.prototype.getItem = function (key, options) {\n        var ret = null;\n        var prefixedKey = this.config.keyPrefix + key;\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return null;\n        }\n        // check whether it's in the cachelist\n        var presentKeyPrio = this.containsKey(key);\n        if (presentKeyPrio !== -1) {\n            if (this._isExpired(prefixedKey)) {\n                // if expired, remove that item and return null\n                this._removeItem(prefixedKey, presentKeyPrio - 1);\n            }\n            else {\n                // if not expired, great, return the value and refresh it\n                ret = CacheObject.getItem(prefixedKey);\n                var item = JSON.parse(ret);\n                this.cacheList[item.priority - 1].refresh(prefixedKey);\n                return item.data;\n            }\n        }\n        if (options && options.callback !== undefined) {\n            var val = options.callback();\n            if (val !== null) {\n                this.setItem(key, val, options);\n            }\n            return val;\n        }\n        return null;\n    };\n    /**\n     * remove item from the cache\n     *\n     * @param key - the key of the item\n     */\n    InMemoryCache.prototype.removeItem = function (key) {\n        var prefixedKey = this.config.keyPrefix + key;\n        // check if the key is in the cache\n        var presentKeyPrio = this.containsKey(key);\n        if (presentKeyPrio !== -1) {\n            this._removeItem(prefixedKey, presentKeyPrio - 1);\n        }\n    };\n    /**\n     * clear the entire cache\n     */\n    InMemoryCache.prototype.clear = function () {\n        for (var i = 0; i < this.maxPriority; i += 1) {\n            for (var _i = 0, _a = this.cacheList[i].getKeys(); _i < _a.length; _i++) {\n                var key = _a[_i];\n                this._removeItem(key, i);\n            }\n        }\n    };\n    /**\n     * Return all the keys in the cache.\n     */\n    InMemoryCache.prototype.getAllKeys = function () {\n        var keys = [];\n        for (var i = 0; i < this.maxPriority; i += 1) {\n            for (var _i = 0, _a = this.cacheList[i].getKeys(); _i < _a.length; _i++) {\n                var key = _a[_i];\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    };\n    /**\n     * return the current size of the cache\n     *\n     * @return the current size of the cache\n     */\n    InMemoryCache.prototype.getCacheCurSize = function () {\n        return this.curSizeInBytes;\n    };\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param config - the customized configuration\n     */\n    InMemoryCache.prototype.createInstance = function (config) {\n        return new InMemoryCache(config);\n    };\n    return InMemoryCache;\n}(StorageCache));\nexport { InMemoryCache };\nvar instance = new InMemoryCache();\nexport default instance;\n//# sourceMappingURL=InMemoryCache.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport Amplify from '@aws-amplify/core';\nimport BrowserStorageCache from './BrowserStorageCache';\nimport InMemoryCache from './InMemoryCache';\nexport { BrowserStorageCache, InMemoryCache };\nexport default BrowserStorageCache;\nAmplify.register(BrowserStorageCache);\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}