{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"@aws-amplify/core\"","webpack:///./node_modules/zen-observable/index.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/@aws-amplify/core/lib/constants.js","webpack:///./lib-esm/vendor/paho-mqtt.js","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/zen-observable/lib/Observable.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///./lib-esm/Providers/PubSubProvider.js","webpack:///./lib-esm/Providers/MqttOverWSProvider.js","webpack:///./lib-esm/Providers/AWSAppSyncProvider.js","webpack:///./lib-esm/Providers/AWSIotProvider.js","webpack:///./lib-esm/PubSub.js","webpack:///./lib-esm/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Observable","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rnds","Array","Math","random","byteToHex","toString","substr","buf","offset","bth","join","hasSymbol","PahoMQTT","data","localStorage","global","setItem","getItem","removeItem","MESSAGE_TYPE","CONNECT","CONNACK","PUBLISH","PUBACK","PUBREC","PUBREL","PUBCOMP","SUBSCRIBE","SUBACK","UNSUBSCRIBE","UNSUBACK","PINGREQ","PINGRESP","DISCONNECT","validate","obj","keys","errorStr","Error","format","ERROR","scope","f","OK","code","text","CONNECT_TIMEOUT","SUBSCRIBE_TIMEOUT","UNSUBSCRIBE_TIMEOUT","PING_TIMEOUT","INTERNAL_ERROR","CONNACK_RETURNCODE","SOCKET_ERROR","SOCKET_CLOSE","MALFORMED_UTF","UNSUPPORTED","INVALID_STATE","INVALID_TYPE","INVALID_ARGUMENT","UNSUPPORTED_OPERATION","INVALID_STORED_DATA","INVALID_MQTT_MESSAGE_TYPE","MALFORMED_UNICODE","BUFFER_FULL","CONNACK_RC","0","1","2","3","4","5","error","substitutions","field","start","part1","part2","MqttProtoIdentifierv3","MqttProtoIdentifierv4","WireMessage","this","options","startingPos","first","input","type","messageInfo","pos","remLength","multiplier","digit","endPos","wireMessage","qos","len","readUint16","topicName","parseUTF8","message","buffer","stringToUTF8","writeUint16","utf8Length","output","charCode","lowCharCode","isNaN","byte1","utf16","byte2","byte3","byte4","String","topicStrLength","destinationNameLength","messageIdentifier","UTF8Length","willMessage","willMessagePayloadBytes","userName","password","topics","requestedQos","payloadMessage","payloadBytes","mbi","numBytes","number","encodeMBI","ArrayBuffer","byteStream","writeString","connectFlags","Pinger","keepAliveInterval","pingReq","doTimeout","doPing","setTimeout","clearTimeout","_keepAliveInterval","timeout","Timeout","timeoutSeconds","action","client","ClientImpl","host","path","restore","connectOptionsMasked","_traceMask","connectOptions","subscribeOptions","invocationContext","grantedQos","errorCode","errorMessage","unsubscribeOptions","onMessageDelivered","_reconnecting","_buffered_msg_queue","_traceBuffer","_sentMessages","_receivedMessages","uriParts","wsurl","mqttVersion","WebSocket","storedMessage","version","hex","messageBytes","prefix","JSON","x","parseInt","_msg_queue","_notify_msg_sent","messageCount","_message_identifier","event","messages","_deframeMessages","byteArray","newData","receiveBuffer","length","result","decodeMessage","errorStack","_reconnectTimeout","sentMessage","receivedMessage","hostIndex","uris","sequencedMessages","msg","a","b","pubRelMessage","reconnected","pubCompMessage","wireMessageMasked","_trace","pubAckMessage","pubRecMessage","onConnected","reconnect","uri","_reconnectInterval","socket","readyState","close","errorText","_wsuri","mqttVersionExplicit","args","record","severity","max","arguments","push","traceObjectMasked","traceObject","attr","Message","newPayload","payload","retained","duplicate","payloadString","destinationName","set","newDestinationName","newQos","newRetained","topic","Client","clientId","match","port","ipv6AddSBracket","clientIdLength","newOnConnected","disconnectedPublishing","disconnectedBufferSize","onConnectionLost","newOnConnectionLost","newOnMessageDelivered","onMessageArrived","newOnMessageArrived","trace","cleanSession","useSSL","onSuccess","onFailure","hosts","ports","usingURIs","test","ipv6","filter","self","v1","v4","uuid","_createClass","defineProperties","target","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","hasSymbols","Boolean","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","ctor","constructor","undefined","isObservable","hostReportError","e","log","enqueue","fn","Promise","resolve","then","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","closeSubscription","_observer","_queue","_state","notifySubscription","observer","onNotify","queue","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","_subscriber","next","complete","_this","reject","subscribe","done","_this2","_this3","_this4","C","hasSeed","hasValue","seed","acc","_this5","_len","sources","_key","index","startNext","v","from","_this6","subscriptions","outer","inner","indexOf","splice","completeIfDone","closed","forEach","method","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","item","err","return","isArray","_len2","items","_key2","symbol","g","Function","webpackPolyfill","deprecate","paths","children","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","msecs","Date","getTime","nsecs","dt","tl","tmh","ii","__assign","logger","AbstractPubSubProvider","config","extendStatics","__extends","__proto__","__","__awaiter","thisArg","_arguments","P","generator","step","adopt","__generator","body","_","label","sent","trys","ops","verb","y","op","__rest","ClientsQueue","clientFactory","_a","promise","promises","topicSymbol","MqttOverWSProvider","_super","observerForTopic","_observerTopic","url","_b","Paho","clientsQueue","targetTopics","concat","connect","matchedTopicObservers_1","observerTopic","filterArray","topicArray","left","right","mqttTopicMatch","parsedMessage_1","observersForTopic","observersForClientId","_c","e_1","__spreadArrays","il","k","j","jl","AWSAppSyncProvider","_topicClient","topicsForClient","obs","mqttConnections","newSubscriptions","newAliases","alias","Map","_topicAlias","map","elem","connectionInfoForTopic","Set","err_1","origKey","val","AWSIoTProvider","endpoint","serviceInfo","service","region","Credentials","access_key","secret_key","session_token","PubSub","opt","pluggable","providerName","_pluggables","find","provider","getProviderByName","getProviders","providers","console","_instance","Amplify"],"mappings":"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","file":"aws-amplify-pubsub.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aws-amplify/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_pubsub\", [\"@aws-amplify/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_pubsub\"] = factory(require(\"@aws-amplify/core\"));\n\telse\n\t\troot[\"aws_amplify_pubsub\"] = factory(root[\"@aws-amplify/core\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = require('./lib/Observable.js').Observable;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","\"use strict\";\n/*\n * Copyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This Symbol is used to reference an internal-only PubSub provider that\n * is used for AppSync/GraphQL subscriptions in the API category.\n */\nvar hasSymbol = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function';\nexports.INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER = hasSymbol\n    ? Symbol.for('INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER')\n    : '@@INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER';\n//# sourceMappingURL=constants.js.map","/*******************************************************************************\n * Copyright (c) 2013 IBM Corp.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution.\n *\n * The Eclipse Public License is available at\n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *   http://www.eclipse.org/org/documents/edl-v10.php.\n *\n * Contributors:\n *    Andrew Banks - initial API and implementation and initial documentation\n *******************************************************************************/\n\n// Only expose a single object name in the global namespace.\n// Everything must go through this module. Global Paho module\n// only has a single public function, client, which returns\n// a Paho client object given connection details.\n\n/**\n * Send and receive messages using web browsers.\n * <p>\n * This programming interface lets a JavaScript client application use the MQTT V3.1 or\n * V3.1.1 protocol to connect to an MQTT-supporting messaging server.\n *\n * The function supported includes:\n * <ol>\n * <li>Connecting to and disconnecting from a server. The server is identified by its host name and port number.\n * <li>Specifying options that relate to the communications link with the server,\n * for example the frequency of keep-alive heartbeats, and whether SSL/TLS is required.\n * <li>Subscribing to and receiving messages from MQTT Topics.\n * <li>Publishing messages to MQTT Topics.\n * </ol>\n * <p>\n * The API consists of two main objects:\n * <dl>\n * <dt><b>{@link Paho.Client}</b></dt>\n * <dd>This contains methods that provide the functionality of the API,\n * including provision of callbacks that notify the application when a message\n * arrives from or is delivered to the messaging server,\n * or when the status of its connection to the messaging server changes.</dd>\n * <dt><b>{@link Paho.Message}</b></dt>\n * <dd>This encapsulates the payload of the message along with various attributes\n * associated with its delivery, in particular the destination to which it has\n * been (or is about to be) sent.</dd>\n * </dl>\n * <p>\n * The programming interface validates parameters passed to it, and will throw\n * an Error containing an error message intended for developer use, if it detects\n * an error with any parameter.\n * <p>\n * Example:\n *\n * <code><pre>\n * client = new Paho.Client(location.hostname, Number(location.port), \"clientId\");\n * client.onConnectionLost = onConnectionLost;\n * client.onMessageArrived = onMessageArrived;\n * client.connect({onSuccess:onConnect});\n *\n * function onConnect() {\n *   // Once a connection has been made, make a subscription and send a message.\n *   console.log(\"onConnect\");\n *   client.subscribe(\"/World\");\n *   message = new Paho.Message(\"Hello\");\n *   message.destinationName = \"/World\";\n *   client.send(message);\n * };\n * function onConnectionLost(responseObject) {\n *   if (responseObject.errorCode !== 0)\n *  \tconsole.log(\"onConnectionLost:\"+responseObject.errorMessage);\n * \t };\n * function onMessageArrived(message) {\n *   console.log(\"onMessageArrived:\"+message.payloadString);\n *   client.disconnect();\n * };\n * </pre></code>\n * @namespace Paho\n */\n\n/* jshint shadow:true */\n(function ExportLibrary(root, factory) {\n\tif (typeof exports === 'object' && typeof module === 'object') {\n\t\tmodule.exports = factory();\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\texports = factory();\n\t} else {\n\t\t//if (typeof root.Paho === \"undefined\"){\n\t\t//\troot.Paho = {};\n\t\t//}\n\t\troot.Paho = factory();\n\t}\n})(this, function LibraryFactory() {\n\tvar PahoMQTT = (function(global) {\n\t\t// Private variables below, these are only visible inside the function closure\n\t\t// which is used to define the module.\n\t\tvar version = '@VERSION@-@BUILDLEVEL@';\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tvar localStorage =\n\t\t\tglobal.localStorage ||\n\t\t\t(function() {\n\t\t\t\tvar data = {};\n\n\t\t\t\treturn {\n\t\t\t\t\tsetItem: function(key, item) {\n\t\t\t\t\t\tdata[key] = item;\n\t\t\t\t\t},\n\t\t\t\t\tgetItem: function(key) {\n\t\t\t\t\t\treturn data[key];\n\t\t\t\t\t},\n\t\t\t\t\tremoveItem: function(key) {\n\t\t\t\t\t\tdelete data[key];\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t})();\n\n\t\t/**\n\t\t * Unique message type identifiers, with associated\n\t\t * associated integer values.\n\t\t * @private\n\t\t */\n\t\tvar MESSAGE_TYPE = {\n\t\t\tCONNECT: 1,\n\t\t\tCONNACK: 2,\n\t\t\tPUBLISH: 3,\n\t\t\tPUBACK: 4,\n\t\t\tPUBREC: 5,\n\t\t\tPUBREL: 6,\n\t\t\tPUBCOMP: 7,\n\t\t\tSUBSCRIBE: 8,\n\t\t\tSUBACK: 9,\n\t\t\tUNSUBSCRIBE: 10,\n\t\t\tUNSUBACK: 11,\n\t\t\tPINGREQ: 12,\n\t\t\tPINGRESP: 13,\n\t\t\tDISCONNECT: 14,\n\t\t};\n\n\t\t// Collection of utility methods used to simplify module code\n\t\t// and promote the DRY pattern.\n\n\t\t/**\n\t\t * Validate an object's parameter names to ensure they\n\t\t * match a list of expected variables name for this option\n\t\t * type. Used to ensure option object passed into the API don't\n\t\t * contain erroneous parameters.\n\t\t * @param {Object} obj - User options object\n\t\t * @param {Object} keys - valid keys and types that may exist in obj.\n\t\t * @throws {Error} Invalid option parameter found.\n\t\t * @private\n\t\t */\n\t\tvar validate = function(obj, keys) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\tif (keys.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (typeof obj[key] !== keys[key])\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [typeof obj[key], key])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar errorStr =\n\t\t\t\t\t\t\t'Unknown property, ' + key + '. Valid properties are:';\n\t\t\t\t\t\tfor (var validKey in keys)\n\t\t\t\t\t\t\tif (keys.hasOwnProperty(validKey))\n\t\t\t\t\t\t\t\terrorStr = errorStr + ' ' + validKey;\n\t\t\t\t\t\tthrow new Error(errorStr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Return a new function which runs the user function bound\n\t\t * to a fixed scope.\n\t\t * @param {function} User function\n\t\t * @param {object} Function scope\n\t\t * @return {function} User function bound to another scope\n\t\t * @private\n\t\t */\n\t\tvar scope = function(f, scope) {\n\t\t\treturn function() {\n\t\t\t\treturn f.apply(scope, arguments);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * Unique message type identifiers, with associated\n\t\t * associated integer values.\n\t\t * @private\n\t\t */\n\t\tvar ERROR = {\n\t\t\tOK: { code: 0, text: 'AMQJSC0000I OK.' },\n\t\t\tCONNECT_TIMEOUT: { code: 1, text: 'AMQJSC0001E Connect timed out.' },\n\t\t\tSUBSCRIBE_TIMEOUT: { code: 2, text: 'AMQJS0002E Subscribe timed out.' },\n\t\t\tUNSUBSCRIBE_TIMEOUT: {\n\t\t\t\tcode: 3,\n\t\t\t\ttext: 'AMQJS0003E Unsubscribe timed out.',\n\t\t\t},\n\t\t\tPING_TIMEOUT: { code: 4, text: 'AMQJS0004E Ping timed out.' },\n\t\t\tINTERNAL_ERROR: {\n\t\t\t\tcode: 5,\n\t\t\t\ttext: 'AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}',\n\t\t\t},\n\t\t\tCONNACK_RETURNCODE: {\n\t\t\t\tcode: 6,\n\t\t\t\ttext: 'AMQJS0006E Bad Connack return code:{0} {1}.',\n\t\t\t},\n\t\t\tSOCKET_ERROR: { code: 7, text: 'AMQJS0007E Socket error:{0}.' },\n\t\t\tSOCKET_CLOSE: { code: 8, text: 'AMQJS0008I Socket closed.' },\n\t\t\tMALFORMED_UTF: {\n\t\t\t\tcode: 9,\n\t\t\t\ttext: 'AMQJS0009E Malformed UTF data:{0} {1} {2}.',\n\t\t\t},\n\t\t\tUNSUPPORTED: {\n\t\t\t\tcode: 10,\n\t\t\t\ttext: 'AMQJS0010E {0} is not supported by this browser.',\n\t\t\t},\n\t\t\tINVALID_STATE: { code: 11, text: 'AMQJS0011E Invalid state {0}.' },\n\t\t\tINVALID_TYPE: { code: 12, text: 'AMQJS0012E Invalid type {0} for {1}.' },\n\t\t\tINVALID_ARGUMENT: {\n\t\t\t\tcode: 13,\n\t\t\t\ttext: 'AMQJS0013E Invalid argument {0} for {1}.',\n\t\t\t},\n\t\t\tUNSUPPORTED_OPERATION: {\n\t\t\t\tcode: 14,\n\t\t\t\ttext: 'AMQJS0014E Unsupported operation.',\n\t\t\t},\n\t\t\tINVALID_STORED_DATA: {\n\t\t\t\tcode: 15,\n\t\t\t\ttext: 'AMQJS0015E Invalid data in local storage key={0} value={1}.',\n\t\t\t},\n\t\t\tINVALID_MQTT_MESSAGE_TYPE: {\n\t\t\t\tcode: 16,\n\t\t\t\ttext: 'AMQJS0016E Invalid MQTT message type {0}.',\n\t\t\t},\n\t\t\tMALFORMED_UNICODE: {\n\t\t\t\tcode: 17,\n\t\t\t\ttext: 'AMQJS0017E Malformed Unicode string:{0} {1}.',\n\t\t\t},\n\t\t\tBUFFER_FULL: {\n\t\t\t\tcode: 18,\n\t\t\t\ttext: 'AMQJS0018E Message buffer is full, maximum buffer size: {0}.',\n\t\t\t},\n\t\t};\n\n\t\t/** CONNACK RC Meaning. */\n\t\tvar CONNACK_RC = {\n\t\t\t0: 'Connection Accepted',\n\t\t\t1: 'Connection Refused: unacceptable protocol version',\n\t\t\t2: 'Connection Refused: identifier rejected',\n\t\t\t3: 'Connection Refused: server unavailable',\n\t\t\t4: 'Connection Refused: bad user name or password',\n\t\t\t5: 'Connection Refused: not authorized',\n\t\t};\n\n\t\t/**\n\t\t * Format an error message text.\n\t\t * @private\n\t\t * @param {error} ERROR value above.\n\t\t * @param {substitutions} [array] substituted into the text.\n\t\t * @return the text with the substitutions made.\n\t\t */\n\t\tvar format = function(error, substitutions) {\n\t\t\tvar text = error.text;\n\t\t\tif (substitutions) {\n\t\t\t\tvar field, start;\n\t\t\t\tfor (var i = 0; i < substitutions.length; i++) {\n\t\t\t\t\tfield = '{' + i + '}';\n\t\t\t\t\tstart = text.indexOf(field);\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tvar part1 = text.substring(0, start);\n\t\t\t\t\t\tvar part2 = text.substring(start + field.length);\n\t\t\t\t\t\ttext = part1 + substitutions[i] + part2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\t//MQTT protocol and version          6    M    Q    I    s    d    p    3\n\t\tvar MqttProtoIdentifierv3 = [\n\t\t\t0x00,\n\t\t\t0x06,\n\t\t\t0x4d,\n\t\t\t0x51,\n\t\t\t0x49,\n\t\t\t0x73,\n\t\t\t0x64,\n\t\t\t0x70,\n\t\t\t0x03,\n\t\t];\n\t\t//MQTT proto/version for 311         4    M    Q    T    T    4\n\t\tvar MqttProtoIdentifierv4 = [0x00, 0x04, 0x4d, 0x51, 0x54, 0x54, 0x04];\n\n\t\t/**\n\t\t * Construct an MQTT wire protocol message.\n\t\t * @param type MQTT packet type.\n\t\t * @param options optional wire message attributes.\n\t\t *\n\t\t * Optional properties\n\t\t *\n\t\t * messageIdentifier: message ID in the range [0..65535]\n\t\t * payloadMessage:\tApplication Message - PUBLISH only\n\t\t * connectStrings:\tarray of 0 or more Strings to be put into the CONNECT payload\n\t\t * topics:\t\t\tarray of strings (SUBSCRIBE, UNSUBSCRIBE)\n\t\t * requestQoS:\t\tarray of QoS values [0..2]\n\t\t *\n\t\t * \"Flag\" properties\n\t\t * cleanSession:\ttrue if present / false if absent (CONNECT)\n\t\t * willMessage:  \ttrue if present / false if absent (CONNECT)\n\t\t * isRetained:\t\ttrue if present / false if absent (CONNECT)\n\t\t * userName:\t\ttrue if present / false if absent (CONNECT)\n\t\t * password:\t\ttrue if present / false if absent (CONNECT)\n\t\t * keepAliveInterval:\tinteger [0..65535]  (CONNECT)\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t */\n\t\tvar WireMessage = function(type, options) {\n\t\t\tthis.type = type;\n\t\t\tfor (var name in options) {\n\t\t\t\tif (options.hasOwnProperty(name)) {\n\t\t\t\t\tthis[name] = options[name];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tWireMessage.prototype.encode = function() {\n\t\t\t// Compute the first byte of the fixed header\n\t\t\tvar first = (this.type & 0x0f) << 4;\n\n\t\t\t/*\n\t\t\t * Now calculate the length of the variable header + payload by adding up the lengths\n\t\t\t * of all the component parts\n\t\t\t */\n\n\t\t\tvar remLength = 0;\n\t\t\tvar topicStrLength = [];\n\t\t\tvar destinationNameLength = 0;\n\t\t\tvar willMessagePayloadBytes;\n\n\t\t\t// if the message contains a messageIdentifier then we need two bytes for that\n\t\t\tif (this.messageIdentifier !== undefined) remLength += 2;\n\n\t\t\tswitch (this.type) {\n\t\t\t\t// If this a Connect then we need to include 12 bytes for its header\n\t\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\t\tswitch (this.mqttVersion) {\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tremLength += MqttProtoIdentifierv3.length + 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tremLength += MqttProtoIdentifierv4.length + 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tremLength += UTF8Length(this.clientId) + 2;\n\t\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\t\tremLength += UTF8Length(this.willMessage.destinationName) + 2;\n\t\t\t\t\t\t// Will message is always a string, sent as UTF-8 characters with a preceding length.\n\t\t\t\t\t\twillMessagePayloadBytes = this.willMessage.payloadBytes;\n\t\t\t\t\t\tif (!(willMessagePayloadBytes instanceof Uint8Array))\n\t\t\t\t\t\t\twillMessagePayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\t\tremLength += willMessagePayloadBytes.byteLength + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\t\tremLength += UTF8Length(this.userName) + 2;\n\t\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\t\tremLength += UTF8Length(this.password) + 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Subscribe, Unsubscribe can both contain topic strings\n\t\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t\t}\n\t\t\t\t\tremLength += this.requestedQos.length; // 1 byte for each topic's Qos\n\t\t\t\t\t// QoS on Subscribe only\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tif (this.payloadMessage.duplicate) first |= 0x08;\n\t\t\t\t\tfirst = first |= this.payloadMessage.qos << 1;\n\t\t\t\t\tif (this.payloadMessage.retained) first |= 0x01;\n\t\t\t\t\tdestinationNameLength = UTF8Length(\n\t\t\t\t\t\tthis.payloadMessage.destinationName\n\t\t\t\t\t);\n\t\t\t\t\tremLength += destinationNameLength + 2;\n\t\t\t\t\tvar payloadBytes = this.payloadMessage.payloadBytes;\n\t\t\t\t\tremLength += payloadBytes.byteLength;\n\t\t\t\t\tif (payloadBytes instanceof ArrayBuffer)\n\t\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\telse if (!(payloadBytes instanceof Uint8Array))\n\t\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes.buffer);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Now we can allocate a buffer for the message\n\n\t\t\tvar mbi = encodeMBI(remLength); // Convert the length to MQTT MBI format\n\t\t\tvar pos = mbi.length + 1; // Offset of start of variable header\n\t\t\tvar buffer = new ArrayBuffer(remLength + pos);\n\t\t\tvar byteStream = new Uint8Array(buffer); // view it as a sequence of bytes\n\n\t\t\t//Write the fixed header into the buffer\n\t\t\tbyteStream[0] = first;\n\t\t\tbyteStream.set(mbi, 1);\n\n\t\t\t// If this is a PUBLISH then the variable header starts with a topic\n\t\t\tif (this.type == MESSAGE_TYPE.PUBLISH)\n\t\t\t\tpos = writeString(\n\t\t\t\t\tthis.payloadMessage.destinationName,\n\t\t\t\t\tdestinationNameLength,\n\t\t\t\t\tbyteStream,\n\t\t\t\t\tpos\n\t\t\t\t);\n\t\t\t// If this is a CONNECT then the variable header contains the protocol name/version, flags and keepalive time\n\t\t\telse if (this.type == MESSAGE_TYPE.CONNECT) {\n\t\t\t\tswitch (this.mqttVersion) {\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv3, pos);\n\t\t\t\t\t\tpos += MqttProtoIdentifierv3.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv4, pos);\n\t\t\t\t\t\tpos += MqttProtoIdentifierv4.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar connectFlags = 0;\n\t\t\t\tif (this.cleanSession) connectFlags = 0x02;\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tconnectFlags |= 0x04;\n\t\t\t\t\tconnectFlags |= this.willMessage.qos << 3;\n\t\t\t\t\tif (this.willMessage.retained) {\n\t\t\t\t\t\tconnectFlags |= 0x20;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined) connectFlags |= 0x80;\n\t\t\t\tif (this.password !== undefined) connectFlags |= 0x40;\n\t\t\t\tbyteStream[pos++] = connectFlags;\n\t\t\t\tpos = writeUint16(this.keepAliveInterval, byteStream, pos);\n\t\t\t}\n\n\t\t\t// Output the messageIdentifier - if there is one\n\t\t\tif (this.messageIdentifier !== undefined)\n\t\t\t\tpos = writeUint16(this.messageIdentifier, byteStream, pos);\n\n\t\t\tswitch (this.type) {\n\t\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\tthis.clientId,\n\t\t\t\t\t\tUTF8Length(this.clientId),\n\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.willMessage.destinationName,\n\t\t\t\t\t\t\tUTF8Length(this.willMessage.destinationName),\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\t\tpos = writeUint16(\n\t\t\t\t\t\t\twillMessagePayloadBytes.byteLength,\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbyteStream.set(willMessagePayloadBytes, pos);\n\t\t\t\t\t\tpos += willMessagePayloadBytes.byteLength;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.userName,\n\t\t\t\t\t\t\tUTF8Length(this.userName),\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.password,\n\t\t\t\t\t\t\tUTF8Length(this.password),\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\t// PUBLISH has a text or binary payload, if text do not add a 2 byte length field, just the UTF characters.\n\t\t\t\t\tbyteStream.set(payloadBytes, pos);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREC:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREL:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t//    \t    \tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t\t// SUBSCRIBE has a list of topic strings and request QoS\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.topics[i],\n\t\t\t\t\t\t\ttopicStrLength[i],\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbyteStream[pos++] = this.requestedQos[i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t\t// UNSUBSCRIBE has a list of topic strings\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++)\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.topics[i],\n\t\t\t\t\t\t\ttopicStrLength[i],\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t// Do nothing.\n\t\t\t}\n\n\t\t\treturn buffer;\n\t\t};\n\n\t\tfunction decodeMessage(input, pos) {\n\t\t\tvar startingPos = pos;\n\t\t\tvar first = input[pos];\n\t\t\tvar type = first >> 4;\n\t\t\tvar messageInfo = (first &= 0x0f);\n\t\t\tpos += 1;\n\n\t\t\t// Decode the remaining length (MBI format)\n\n\t\t\tvar digit;\n\t\t\tvar remLength = 0;\n\t\t\tvar multiplier = 1;\n\t\t\tdo {\n\t\t\t\tif (pos == input.length) {\n\t\t\t\t\treturn [null, startingPos];\n\t\t\t\t}\n\t\t\t\tdigit = input[pos++];\n\t\t\t\tremLength += (digit & 0x7f) * multiplier;\n\t\t\t\tmultiplier *= 128;\n\t\t\t} while ((digit & 0x80) !== 0);\n\n\t\t\tvar endPos = pos + remLength;\n\t\t\tif (endPos > input.length) {\n\t\t\t\treturn [null, startingPos];\n\t\t\t}\n\n\t\t\tvar wireMessage = new WireMessage(type);\n\t\t\tswitch (type) {\n\t\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\t\tvar connectAcknowledgeFlags = input[pos++];\n\t\t\t\t\tif (connectAcknowledgeFlags & 0x01) wireMessage.sessionPresent = true;\n\t\t\t\t\twireMessage.returnCode = input[pos++];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tvar qos = (messageInfo >> 1) & 0x03;\n\n\t\t\t\t\tvar len = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t\tvar topicName = parseUTF8(input, pos, len);\n\t\t\t\t\tpos += len;\n\t\t\t\t\t// If QoS 1 or 2 there will be a messageIdentifier\n\t\t\t\t\tif (qos > 0) {\n\t\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t}\n\t\t\t\t\tvar message = new PahoMQTT.Message(input.subarray(pos, endPos));\n\t\t\t\t\tif ((messageInfo & 0x01) == 0x01) message.retained = true;\n\t\t\t\t\tif ((messageInfo & 0x08) == 0x08) message.duplicate = true;\n\t\t\t\t\tmessage.qos = qos;\n\t\t\t\t\tmessage.destinationName = topicName;\n\t\t\t\t\twireMessage.payloadMessage = message;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t\twireMessage.returnCode = input.subarray(pos, endPos);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn [wireMessage, endPos];\n\t\t}\n\n\t\tfunction writeUint16(input, buffer, offset) {\n\t\t\tbuffer[offset++] = input >> 8; //MSB\n\t\t\tbuffer[offset++] = input % 256; //LSB\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction writeString(input, utf8Length, buffer, offset) {\n\t\t\toffset = writeUint16(utf8Length, buffer, offset);\n\t\t\tstringToUTF8(input, buffer, offset);\n\t\t\treturn offset + utf8Length;\n\t\t}\n\n\t\tfunction readUint16(buffer, offset) {\n\t\t\treturn 256 * buffer[offset] + buffer[offset + 1];\n\t\t}\n\n\t\t/**\n\t\t * Encodes an MQTT Multi-Byte Integer\n\t\t * @private\n\t\t */\n\t\tfunction encodeMBI(number) {\n\t\t\tvar output = new Array(1);\n\t\t\tvar numBytes = 0;\n\n\t\t\tdo {\n\t\t\t\tvar digit = number % 128;\n\t\t\t\tnumber = number >> 7;\n\t\t\t\tif (number > 0) {\n\t\t\t\t\tdigit |= 0x80;\n\t\t\t\t}\n\t\t\t\toutput[numBytes++] = digit;\n\t\t\t} while (number > 0 && numBytes < 4);\n\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Takes a String and calculates its length in bytes when encoded in UTF8.\n\t\t * @private\n\t\t */\n\t\tfunction UTF8Length(input) {\n\t\t\tvar output = 0;\n\t\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\t\t\t\tif (charCode > 0x7ff) {\n\t\t\t\t\t// Surrogate pair means its a 4 byte character\n\t\t\t\t\tif (0xd800 <= charCode && charCode <= 0xdbff) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\toutput++;\n\t\t\t\t\t}\n\t\t\t\t\toutput += 3;\n\t\t\t\t} else if (charCode > 0x7f) output += 2;\n\t\t\t\telse output++;\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Takes a String and writes it into an array as UTF8 encoded bytes.\n\t\t * @private\n\t\t */\n\t\tfunction stringToUTF8(input, output, start) {\n\t\t\tvar pos = start;\n\t\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\n\t\t\t\t// Check for a surrogate pair.\n\t\t\t\tif (0xd800 <= charCode && charCode <= 0xdbff) {\n\t\t\t\t\tvar lowCharCode = input.charCodeAt(++i);\n\t\t\t\t\tif (isNaN(lowCharCode)) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UNICODE, [charCode, lowCharCode])\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcharCode =\n\t\t\t\t\t\t((charCode - 0xd800) << 10) + (lowCharCode - 0xdc00) + 0x10000;\n\t\t\t\t}\n\n\t\t\t\tif (charCode <= 0x7f) {\n\t\t\t\t\toutput[pos++] = charCode;\n\t\t\t\t} else if (charCode <= 0x7ff) {\n\t\t\t\t\toutput[pos++] = ((charCode >> 6) & 0x1f) | 0xc0;\n\t\t\t\t\toutput[pos++] = (charCode & 0x3f) | 0x80;\n\t\t\t\t} else if (charCode <= 0xffff) {\n\t\t\t\t\toutput[pos++] = ((charCode >> 12) & 0x0f) | 0xe0;\n\t\t\t\t\toutput[pos++] = ((charCode >> 6) & 0x3f) | 0x80;\n\t\t\t\t\toutput[pos++] = (charCode & 0x3f) | 0x80;\n\t\t\t\t} else {\n\t\t\t\t\toutput[pos++] = ((charCode >> 18) & 0x07) | 0xf0;\n\t\t\t\t\toutput[pos++] = ((charCode >> 12) & 0x3f) | 0x80;\n\t\t\t\t\toutput[pos++] = ((charCode >> 6) & 0x3f) | 0x80;\n\t\t\t\t\toutput[pos++] = (charCode & 0x3f) | 0x80;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\tfunction parseUTF8(input, offset, length) {\n\t\t\tvar output = '';\n\t\t\tvar utf16;\n\t\t\tvar pos = offset;\n\n\t\t\twhile (pos < offset + length) {\n\t\t\t\tvar byte1 = input[pos++];\n\t\t\t\tif (byte1 < 128) utf16 = byte1;\n\t\t\t\telse {\n\t\t\t\t\tvar byte2 = input[pos++] - 128;\n\t\t\t\t\tif (byte2 < 0)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\tif (byte1 < 0xe0)\n\t\t\t\t\t\t// 2 byte character\n\t\t\t\t\t\tutf16 = 64 * (byte1 - 0xc0) + byte2;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar byte3 = input[pos++] - 128;\n\t\t\t\t\t\tif (byte3 < 0)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t\tbyte3.toString(16),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (byte1 < 0xf0)\n\t\t\t\t\t\t\t// 3 byte character\n\t\t\t\t\t\t\tutf16 = 4096 * (byte1 - 0xe0) + 64 * byte2 + byte3;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar byte4 = input[pos++] - 128;\n\t\t\t\t\t\t\tif (byte4 < 0)\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte3.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte4.toString(16),\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (byte1 < 0xf8)\n\t\t\t\t\t\t\t\t// 4 byte character\n\t\t\t\t\t\t\t\tutf16 =\n\t\t\t\t\t\t\t\t\t262144 * (byte1 - 0xf0) + 4096 * byte2 + 64 * byte3 + byte4;\n\t\t\t\t\t\t\t// longer encodings are not supported\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte3.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte4.toString(16),\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (utf16 > 0xffff) {\n\t\t\t\t\t// 4 byte character - express as a surrogate pair\n\t\t\t\t\tutf16 -= 0x10000;\n\t\t\t\t\toutput += String.fromCharCode(0xd800 + (utf16 >> 10)); // lead character\n\t\t\t\t\tutf16 = 0xdc00 + (utf16 & 0x3ff); // trail character\n\t\t\t\t}\n\t\t\t\toutput += String.fromCharCode(utf16);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Repeat keepalive requests, monitor responses.\n\t\t * @ignore\n\t\t */\n\t\tvar Pinger = function(client, keepAliveInterval) {\n\t\t\tthis._client = client;\n\t\t\tthis._keepAliveInterval = keepAliveInterval * 1000;\n\t\t\tthis.isReset = false;\n\n\t\t\tvar pingReq = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();\n\n\t\t\tvar doTimeout = function(pinger) {\n\t\t\t\treturn function() {\n\t\t\t\t\treturn doPing.apply(pinger);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/** @ignore */\n\t\t\tvar doPing = function() {\n\t\t\t\tif (!this.isReset) {\n\t\t\t\t\tthis._client._trace('Pinger.doPing', 'Timed out');\n\t\t\t\t\tthis._client._disconnected(\n\t\t\t\t\t\tERROR.PING_TIMEOUT.code,\n\t\t\t\t\t\tformat(ERROR.PING_TIMEOUT)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.isReset = false;\n\t\t\t\t\tthis._client._trace('Pinger.doPing', 'send PINGREQ');\n\t\t\t\t\tthis._client.socket.send(pingReq);\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.reset = function() {\n\t\t\t\tthis.isReset = true;\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\tif (this._keepAliveInterval > 0)\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t};\n\n\t\t\tthis.cancel = function() {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * Monitor request completion.\n\t\t * @ignore\n\t\t */\n\t\tvar Timeout = function(client, timeoutSeconds, action, args) {\n\t\t\tif (!timeoutSeconds) timeoutSeconds = 30;\n\n\t\t\tvar doTimeout = function(action, client, args) {\n\t\t\t\treturn function() {\n\t\t\t\t\treturn action.apply(client, args);\n\t\t\t\t};\n\t\t\t};\n\t\t\tthis.timeout = setTimeout(\n\t\t\t\tdoTimeout(action, client, args),\n\t\t\t\ttimeoutSeconds * 1000\n\t\t\t);\n\n\t\t\tthis.cancel = function() {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * Internal implementation of the Websockets MQTT V3.1 client.\n\t\t *\n\t\t * @name Paho.ClientImpl @constructor\n\t\t * @param {String} host the DNS nameof the webSocket host.\n\t\t * @param {Number} port the port number for that host.\n\t\t * @param {String} clientId the MQ client identifier.\n\t\t */\n\t\tvar ClientImpl = function(uri, host, port, path, clientId) {\n\t\t\t// Check dependencies are satisfied in this browser.\n\t\t\tif (!('WebSocket' in global && global.WebSocket !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, ['WebSocket']));\n\t\t\t}\n\t\t\tif (!('ArrayBuffer' in global && global.ArrayBuffer !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, ['ArrayBuffer']));\n\t\t\t}\n\t\t\tthis._trace('Paho.Client', uri, host, port, path, clientId);\n\n\t\t\tthis.host = host;\n\t\t\tthis.port = port;\n\t\t\tthis.path = path;\n\t\t\tthis.uri = uri;\n\t\t\tthis.clientId = clientId;\n\t\t\tthis._wsuri = null;\n\n\t\t\t// Local storagekeys are qualified with the following string.\n\t\t\t// The conditional inclusion of path in the key is for backward\n\t\t\t// compatibility to when the path was not configurable and assumed to\n\t\t\t// be /mqtt\n\t\t\tthis._localKey =\n\t\t\t\thost +\n\t\t\t\t':' +\n\t\t\t\tport +\n\t\t\t\t(path != '/mqtt' ? ':' + path : '') +\n\t\t\t\t':' +\n\t\t\t\tclientId +\n\t\t\t\t':';\n\n\t\t\t// Create private instance-only message queue\n\t\t\t// Internal queue of messages to be sent, in sending order.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\n\t\t\t// Messages we have sent and are expecting a response for, indexed by their respective message ids.\n\t\t\tthis._sentMessages = {};\n\n\t\t\t// Messages we have received and acknowleged and are expecting a confirm message for\n\t\t\t// indexed by their respective message ids.\n\t\t\tthis._receivedMessages = {};\n\n\t\t\t// Internal list of callbacks to be executed when messages\n\t\t\t// have been successfully sent over web socket, e.g. disconnect\n\t\t\t// when it doesn't have to wait for ACK, just message is dispatched.\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\t// Unique identifier for SEND messages, incrementing\n\t\t\t// counter as messages are sent.\n\t\t\tthis._message_identifier = 1;\n\n\t\t\t// Used to determine the transmission sequence of stored sent messages.\n\t\t\tthis._sequence = 0;\n\n\t\t\t// Load the local state, if any, from the saved version, only restore state relevant to this client.\n\t\t\tfor (var key in localStorage)\n\t\t\t\tif (\n\t\t\t\t\tkey.indexOf('Sent:' + this._localKey) === 0 ||\n\t\t\t\t\tkey.indexOf('Received:' + this._localKey) === 0\n\t\t\t\t)\n\t\t\t\t\tthis.restore(key);\n\t\t};\n\n\t\t// Messaging Client public instance members.\n\t\tClientImpl.prototype.host = null;\n\t\tClientImpl.prototype.port = null;\n\t\tClientImpl.prototype.path = null;\n\t\tClientImpl.prototype.uri = null;\n\t\tClientImpl.prototype.clientId = null;\n\n\t\t// Messaging Client private instance members.\n\t\tClientImpl.prototype.socket = null;\n\t\t/* true once we have received an acknowledgement to a CONNECT packet. */\n\t\tClientImpl.prototype.connected = false;\n\t\t/* The largest message identifier allowed, may not be larger than 2**16 but\n\t\t * if set smaller reduces the maximum number of outbound messages allowed.\n\t\t */\n\t\tClientImpl.prototype.maxMessageIdentifier = 65536;\n\t\tClientImpl.prototype.connectOptions = null;\n\t\tClientImpl.prototype.hostIndex = null;\n\t\tClientImpl.prototype.onConnected = null;\n\t\tClientImpl.prototype.onConnectionLost = null;\n\t\tClientImpl.prototype.onMessageDelivered = null;\n\t\tClientImpl.prototype.onMessageArrived = null;\n\t\tClientImpl.prototype.traceFunction = null;\n\t\tClientImpl.prototype._msg_queue = null;\n\t\tClientImpl.prototype._buffered_msg_queue = null;\n\t\tClientImpl.prototype._connectTimeout = null;\n\t\t/* The sendPinger monitors how long we allow before we send data to prove to the server that we are alive. */\n\t\tClientImpl.prototype.sendPinger = null;\n\t\t/* The receivePinger monitors how long we allow before we require evidence that the server is alive. */\n\t\tClientImpl.prototype.receivePinger = null;\n\t\tClientImpl.prototype._reconnectInterval = 1; // Reconnect Delay, starts at 1 second\n\t\tClientImpl.prototype._reconnecting = false;\n\t\tClientImpl.prototype._reconnectTimeout = null;\n\t\tClientImpl.prototype.disconnectedPublishing = false;\n\t\tClientImpl.prototype.disconnectedBufferSize = 5000;\n\n\t\tClientImpl.prototype.receiveBuffer = null;\n\n\t\tClientImpl.prototype._traceBuffer = null;\n\t\tClientImpl.prototype._MAX_TRACE_ENTRIES = 100;\n\n\t\tClientImpl.prototype.connect = function(connectOptions) {\n\t\t\tvar connectOptionsMasked = this._traceMask(connectOptions, 'password');\n\t\t\tthis._trace(\n\t\t\t\t'Client.connect',\n\t\t\t\tconnectOptionsMasked,\n\t\t\t\tthis.socket,\n\t\t\t\tthis.connected\n\t\t\t);\n\n\t\t\tif (this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['already connected']));\n\t\t\tif (this.socket)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['already connected']));\n\n\t\t\tif (this._reconnecting) {\n\t\t\t\t// connect() function is called while reconnect is in progress.\n\t\t\t\t// Terminate the auto reconnect process to use new connect options.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tthis.connectOptions = connectOptions;\n\t\t\tthis._reconnectInterval = 1;\n\t\t\tthis._reconnecting = false;\n\t\t\tif (connectOptions.uris) {\n\t\t\t\tthis.hostIndex = 0;\n\t\t\t\tthis._doConnect(connectOptions.uris[0]);\n\t\t\t} else {\n\t\t\t\tthis._doConnect(this.uri);\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.subscribe = function(filter, subscribeOptions) {\n\t\t\tthis._trace('Client.subscribe', filter, subscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['not connected']));\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.SUBSCRIBE);\n\t\t\twireMessage.topics = [filter];\n\t\t\tif (subscribeOptions.qos !== undefined)\n\t\t\t\twireMessage.requestedQos = [subscribeOptions.qos];\n\t\t\telse wireMessage.requestedQos = [0];\n\n\t\t\tif (subscribeOptions.onSuccess) {\n\t\t\t\twireMessage.onSuccess = function(grantedQos) {\n\t\t\t\t\tsubscribeOptions.onSuccess({\n\t\t\t\t\t\tinvocationContext: subscribeOptions.invocationContext,\n\t\t\t\t\t\tgrantedQos: grantedQos,\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.onFailure) {\n\t\t\t\twireMessage.onFailure = function(errorCode) {\n\t\t\t\t\tsubscribeOptions.onFailure({\n\t\t\t\t\t\tinvocationContext: subscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode: errorCode,\n\t\t\t\t\t\terrorMessage: format(errorCode),\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(\n\t\t\t\t\tthis,\n\t\t\t\t\tsubscribeOptions.timeout,\n\t\t\t\t\tsubscribeOptions.onFailure,\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinvocationContext: subscribeOptions.invocationContext,\n\t\t\t\t\t\t\terrorCode: ERROR.SUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\t\terrorMessage: format(ERROR.SUBSCRIBE_TIMEOUT),\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// All subscriptions return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype.unsubscribe = function(filter, unsubscribeOptions) {\n\t\t\tthis._trace('Client.unsubscribe', filter, unsubscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['not connected']));\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.UNSUBSCRIBE);\n\t\t\twireMessage.topics = [filter];\n\n\t\t\tif (unsubscribeOptions.onSuccess) {\n\t\t\t\twireMessage.callback = function() {\n\t\t\t\t\tunsubscribeOptions.onSuccess({\n\t\t\t\t\t\tinvocationContext: unsubscribeOptions.invocationContext,\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (unsubscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(\n\t\t\t\t\tthis,\n\t\t\t\t\tunsubscribeOptions.timeout,\n\t\t\t\t\tunsubscribeOptions.onFailure,\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinvocationContext: unsubscribeOptions.invocationContext,\n\t\t\t\t\t\t\terrorCode: ERROR.UNSUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\t\terrorMessage: format(ERROR.UNSUBSCRIBE_TIMEOUT),\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// All unsubscribes return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.send = function(message) {\n\t\t\tthis._trace('Client.send', message);\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.PUBLISH);\n\t\t\twireMessage.payloadMessage = message;\n\n\t\t\tif (this.connected) {\n\t\t\t\t// Mark qos 1 & 2 message as \"ACK required\"\n\t\t\t\t// For qos 0 message, invoke onMessageDelivered callback if there is one.\n\t\t\t\t// Then schedule the message.\n\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t} else if (this.onMessageDelivered) {\n\t\t\t\t\tthis._notify_msg_sent[wireMessage] = this.onMessageDelivered(\n\t\t\t\t\t\twireMessage.payloadMessage\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis._schedule_message(wireMessage);\n\t\t\t} else {\n\t\t\t\t// Currently disconnected, will not schedule this message\n\t\t\t\t// Check if reconnecting is in progress and disconnected publish is enabled.\n\t\t\t\tif (this._reconnecting && this.disconnectedPublishing) {\n\t\t\t\t\t// Check the limit which include the \"required ACK\" messages\n\t\t\t\t\tvar messageCount =\n\t\t\t\t\t\tObject.keys(this._sentMessages).length +\n\t\t\t\t\t\tthis._buffered_msg_queue.length;\n\t\t\t\t\tif (messageCount > this.disconnectedBufferSize) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.BUFFER_FULL, [this.disconnectedBufferSize])\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\t\t\t// Mark this message as \"ACK required\"\n\t\t\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\t\t\t\t\tthis._buffered_msg_queue.unshift(wireMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['not connected']));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.disconnect = function() {\n\t\t\tthis._trace('Client.disconnect');\n\n\t\t\tif (this._reconnecting) {\n\t\t\t\t// disconnect() function is called while reconnect is in progress.\n\t\t\t\t// Terminate the auto reconnect process.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tif (!this.socket)\n\t\t\t\tthrow new Error(\n\t\t\t\t\tformat(ERROR.INVALID_STATE, ['not connecting or connected'])\n\t\t\t\t);\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.DISCONNECT);\n\n\t\t\t// Run the disconnected call back as soon as the message has been sent,\n\t\t\t// in case of a failure later on in the disconnect processing.\n\t\t\t// as a consequence, the _disconected call back may be run several times.\n\t\t\tthis._notify_msg_sent[wireMessage] = scope(this._disconnected, this);\n\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.getTraceLog = function() {\n\t\t\tif (this._traceBuffer !== null) {\n\t\t\t\tthis._trace('Client.getTraceLog', new Date());\n\t\t\t\tthis._trace(\n\t\t\t\t\t'Client.getTraceLog in flight messages',\n\t\t\t\t\tthis._sentMessages.length\n\t\t\t\t);\n\t\t\t\tfor (var key in this._sentMessages)\n\t\t\t\t\tthis._trace('_sentMessages ', key, this._sentMessages[key]);\n\t\t\t\tfor (var key in this._receivedMessages)\n\t\t\t\t\tthis._trace('_receivedMessages ', key, this._receivedMessages[key]);\n\n\t\t\t\treturn this._traceBuffer;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.startTrace = function() {\n\t\t\tif (this._traceBuffer === null) {\n\t\t\t\tthis._traceBuffer = [];\n\t\t\t}\n\t\t\tthis._trace('Client.startTrace', new Date(), version);\n\t\t};\n\n\t\tClientImpl.prototype.stopTrace = function() {\n\t\t\tdelete this._traceBuffer;\n\t\t};\n\n\t\tClientImpl.prototype._doConnect = function(wsurl) {\n\t\t\t// When the socket is open, this client will send the CONNECT WireMessage using the saved parameters.\n\t\t\tif (this.connectOptions.useSSL) {\n\t\t\t\tvar uriParts = wsurl.split(':');\n\t\t\t\turiParts[0] = 'wss';\n\t\t\t\twsurl = uriParts.join(':');\n\t\t\t}\n\t\t\tthis._wsuri = wsurl;\n\t\t\tthis.connected = false;\n\n\t\t\tif (this.connectOptions.mqttVersion < 4) {\n\t\t\t\tthis.socket = new WebSocket(wsurl, ['mqttv3.1']);\n\t\t\t} else {\n\t\t\t\tthis.socket = new WebSocket(wsurl, ['mqtt']);\n\t\t\t}\n\t\t\tthis.socket.binaryType = 'arraybuffer';\n\t\t\tthis.socket.onopen = scope(this._on_socket_open, this);\n\t\t\tthis.socket.onmessage = scope(this._on_socket_message, this);\n\t\t\tthis.socket.onerror = scope(this._on_socket_error, this);\n\t\t\tthis.socket.onclose = scope(this._on_socket_close, this);\n\n\t\t\tthis.sendPinger = new Pinger(this, this.connectOptions.keepAliveInterval);\n\t\t\tthis.receivePinger = new Pinger(\n\t\t\t\tthis,\n\t\t\t\tthis.connectOptions.keepAliveInterval\n\t\t\t);\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\t\t\tthis._connectTimeout = new Timeout(\n\t\t\t\tthis,\n\t\t\t\tthis.connectOptions.timeout,\n\t\t\t\tthis._disconnected,\n\t\t\t\t[ERROR.CONNECT_TIMEOUT.code, format(ERROR.CONNECT_TIMEOUT)]\n\t\t\t);\n\t\t};\n\n\t\t// Schedule a new message to be sent over the WebSockets\n\t\t// connection. CONNECT messages cause WebSocket connection\n\t\t// to be started. All other messages are queued internally\n\t\t// until this has happened. When WS connection starts, process\n\t\t// all outstanding messages.\n\t\tClientImpl.prototype._schedule_message = function(message) {\n\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\tthis._msg_queue.unshift(message);\n\t\t\t// Process outstanding messages in the queue if we have an  open socket, and have received CONNACK.\n\t\t\tif (this.connected) {\n\t\t\t\tthis._process_queue();\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.store = function(prefix, wireMessage) {\n\t\t\tvar storedMessage = {\n\t\t\t\ttype: wireMessage.type,\n\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\tversion: 1,\n\t\t\t};\n\n\t\t\tswitch (wireMessage.type) {\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tif (wireMessage.pubRecReceived) storedMessage.pubRecReceived = true;\n\n\t\t\t\t\t// Convert the payload to a hex string.\n\t\t\t\t\tstoredMessage.payloadMessage = {};\n\t\t\t\t\tvar hex = '';\n\t\t\t\t\tvar messageBytes = wireMessage.payloadMessage.payloadBytes;\n\t\t\t\t\tfor (var i = 0; i < messageBytes.length; i++) {\n\t\t\t\t\t\tif (messageBytes[i] <= 0xf)\n\t\t\t\t\t\t\thex = hex + '0' + messageBytes[i].toString(16);\n\t\t\t\t\t\telse hex = hex + messageBytes[i].toString(16);\n\t\t\t\t\t}\n\t\t\t\t\tstoredMessage.payloadMessage.payloadHex = hex;\n\n\t\t\t\t\tstoredMessage.payloadMessage.qos = wireMessage.payloadMessage.qos;\n\t\t\t\t\tstoredMessage.payloadMessage.destinationName =\n\t\t\t\t\t\twireMessage.payloadMessage.destinationName;\n\t\t\t\t\tif (wireMessage.payloadMessage.duplicate)\n\t\t\t\t\t\tstoredMessage.payloadMessage.duplicate = true;\n\t\t\t\t\tif (wireMessage.payloadMessage.retained)\n\t\t\t\t\t\tstoredMessage.payloadMessage.retained = true;\n\n\t\t\t\t\t// Add a sequence number to sent messages.\n\t\t\t\t\tif (prefix.indexOf('Sent:') === 0) {\n\t\t\t\t\t\tif (wireMessage.sequence === undefined)\n\t\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\tstoredMessage.sequence = wireMessage.sequence;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_STORED_DATA, [\n\t\t\t\t\t\t\tprefix + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\t\t\t\tstoredMessage,\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tlocalStorage.setItem(\n\t\t\t\tprefix + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\tJSON.stringify(storedMessage)\n\t\t\t);\n\t\t};\n\n\t\tClientImpl.prototype.restore = function(key) {\n\t\t\tvar value = localStorage.getItem(key);\n\t\t\tvar storedMessage = JSON.parse(value);\n\n\t\t\tvar wireMessage = new WireMessage(storedMessage.type, storedMessage);\n\n\t\t\tswitch (storedMessage.type) {\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\t// Replace the payload message with a Message object.\n\t\t\t\t\tvar hex = storedMessage.payloadMessage.payloadHex;\n\t\t\t\t\tvar buffer = new ArrayBuffer(hex.length / 2);\n\t\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\t\tvar i = 0;\n\t\t\t\t\twhile (hex.length >= 2) {\n\t\t\t\t\t\tvar x = parseInt(hex.substring(0, 2), 16);\n\t\t\t\t\t\thex = hex.substring(2, hex.length);\n\t\t\t\t\t\tbyteStream[i++] = x;\n\t\t\t\t\t}\n\t\t\t\t\tvar payloadMessage = new PahoMQTT.Message(byteStream);\n\t\t\t\t\tpayloadMessage.qos = storedMessage.payloadMessage.qos;\n\t\t\t\t\tpayloadMessage.destinationName =\n\t\t\t\t\t\tstoredMessage.payloadMessage.destinationName;\n\t\t\t\t\tif (storedMessage.payloadMessage.duplicate)\n\t\t\t\t\t\tpayloadMessage.duplicate = true;\n\t\t\t\t\tif (storedMessage.payloadMessage.retained)\n\t\t\t\t\t\tpayloadMessage.retained = true;\n\t\t\t\t\twireMessage.payloadMessage = payloadMessage;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [key, value]));\n\t\t\t}\n\n\t\t\tif (key.indexOf('Sent:' + this._localKey) === 0) {\n\t\t\t\twireMessage.payloadMessage.duplicate = true;\n\t\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t} else if (key.indexOf('Received:' + this._localKey) === 0) {\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._process_queue = function() {\n\t\t\tvar message = null;\n\n\t\t\t// Send all queued messages down socket connection\n\t\t\twhile ((message = this._msg_queue.pop())) {\n\t\t\t\tthis._socket_send(message);\n\t\t\t\t// Notify listeners that message was successfully sent\n\t\t\t\tif (this._notify_msg_sent[message]) {\n\t\t\t\t\tthis._notify_msg_sent[message]();\n\t\t\t\t\tdelete this._notify_msg_sent[message];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Expect an ACK response for this message. Add message to the set of in progress\n\t\t * messages and set an unused identifier in this message.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._requires_ack = function(wireMessage) {\n\t\t\tvar messageCount = Object.keys(this._sentMessages).length;\n\t\t\tif (messageCount > this.maxMessageIdentifier)\n\t\t\t\tthrow Error('Too many messages:' + messageCount);\n\n\t\t\twhile (this._sentMessages[this._message_identifier] !== undefined) {\n\t\t\t\tthis._message_identifier++;\n\t\t\t}\n\t\t\twireMessage.messageIdentifier = this._message_identifier;\n\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\tif (wireMessage.type === MESSAGE_TYPE.PUBLISH) {\n\t\t\t\tthis.store('Sent:', wireMessage);\n\t\t\t}\n\t\t\tif (this._message_identifier === this.maxMessageIdentifier) {\n\t\t\t\tthis._message_identifier = 1;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Called when the underlying websocket has been opened.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._on_socket_open = function() {\n\t\t\t// Create the CONNECT message object.\n\t\t\tvar wireMessage = new WireMessage(\n\t\t\t\tMESSAGE_TYPE.CONNECT,\n\t\t\t\tthis.connectOptions\n\t\t\t);\n\t\t\twireMessage.clientId = this.clientId;\n\t\t\tthis._socket_send(wireMessage);\n\t\t};\n\n\t\t/**\n\t\t * Called when the underlying websocket has received a complete packet.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._on_socket_message = function(event) {\n\t\t\tthis._trace('Client._on_socket_message', event.data);\n\t\t\tvar messages = this._deframeMessages(event.data);\n\t\t\tfor (var i = 0; i < messages.length; i += 1) {\n\t\t\t\tthis._handleMessage(messages[i]);\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._deframeMessages = function(data) {\n\t\t\tvar byteArray = new Uint8Array(data);\n\t\t\tvar messages = [];\n\t\t\tif (this.receiveBuffer) {\n\t\t\t\tvar newData = new Uint8Array(\n\t\t\t\t\tthis.receiveBuffer.length + byteArray.length\n\t\t\t\t);\n\t\t\t\tnewData.set(this.receiveBuffer);\n\t\t\t\tnewData.set(byteArray, this.receiveBuffer.length);\n\t\t\t\tbyteArray = newData;\n\t\t\t\tdelete this.receiveBuffer;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar offset = 0;\n\t\t\t\twhile (offset < byteArray.length) {\n\t\t\t\t\tvar result = decodeMessage(byteArray, offset);\n\t\t\t\t\tvar wireMessage = result[0];\n\t\t\t\t\toffset = result[1];\n\t\t\t\t\tif (wireMessage !== null) {\n\t\t\t\t\t\tmessages.push(wireMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (offset < byteArray.length) {\n\t\t\t\t\tthis.receiveBuffer = byteArray.subarray(offset);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack =\n\t\t\t\t\terror.hasOwnProperty('stack') == 'undefined'\n\t\t\t\t\t\t? error.stack.toString()\n\t\t\t\t\t\t: 'No Error Stack Available';\n\t\t\t\tthis._disconnected(\n\t\t\t\t\tERROR.INTERNAL_ERROR.code,\n\t\t\t\t\tformat(ERROR.INTERNAL_ERROR, [error.message, errorStack])\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn messages;\n\t\t};\n\n\t\tClientImpl.prototype._handleMessage = function(wireMessage) {\n\t\t\tthis._trace('Client._handleMessage', wireMessage);\n\n\t\t\ttry {\n\t\t\t\tswitch (wireMessage.type) {\n\t\t\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\t\t\tif (this._reconnectTimeout) this._reconnectTimeout.cancel();\n\n\t\t\t\t\t\t// If we have started using clean session then clear up the local state.\n\t\t\t\t\t\tif (this.connectOptions.cleanSession) {\n\t\t\t\t\t\t\tfor (var key in this._sentMessages) {\n\t\t\t\t\t\t\t\tvar sentMessage = this._sentMessages[key];\n\t\t\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t\t\t'Sent:' + this._localKey + sentMessage.messageIdentifier\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._sentMessages = {};\n\n\t\t\t\t\t\t\tfor (var key in this._receivedMessages) {\n\t\t\t\t\t\t\t\tvar receivedMessage = this._receivedMessages[key];\n\t\t\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t\t\t'Received:' +\n\t\t\t\t\t\t\t\t\t\tthis._localKey +\n\t\t\t\t\t\t\t\t\t\treceivedMessage.messageIdentifier\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._receivedMessages = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Client connected and ready for business.\n\t\t\t\t\t\tif (wireMessage.returnCode === 0) {\n\t\t\t\t\t\t\tthis.connected = true;\n\t\t\t\t\t\t\t// Jump to the end of the list of uris and stop looking for a good host.\n\n\t\t\t\t\t\t\tif (this.connectOptions.uris)\n\t\t\t\t\t\t\t\tthis.hostIndex = this.connectOptions.uris.length;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._disconnected(\n\t\t\t\t\t\t\t\tERROR.CONNACK_RETURNCODE.code,\n\t\t\t\t\t\t\t\tformat(ERROR.CONNACK_RETURNCODE, [\n\t\t\t\t\t\t\t\t\twireMessage.returnCode,\n\t\t\t\t\t\t\t\t\tCONNACK_RC[wireMessage.returnCode],\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Resend messages.\n\t\t\t\t\t\tvar sequencedMessages = [];\n\t\t\t\t\t\tfor (var msgId in this._sentMessages) {\n\t\t\t\t\t\t\tif (this._sentMessages.hasOwnProperty(msgId))\n\t\t\t\t\t\t\t\tsequencedMessages.push(this._sentMessages[msgId]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Also schedule qos 0 buffered messages if any\n\t\t\t\t\t\tif (this._buffered_msg_queue.length > 0) {\n\t\t\t\t\t\t\tvar msg = null;\n\t\t\t\t\t\t\twhile ((msg = this._buffered_msg_queue.pop())) {\n\t\t\t\t\t\t\t\tsequencedMessages.push(msg);\n\t\t\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\t\t\tthis._notify_msg_sent[msg] = this.onMessageDelivered(\n\t\t\t\t\t\t\t\t\t\tmsg.payloadMessage\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sort sentMessages into the original sent order.\n\t\t\t\t\t\tvar sequencedMessages = sequencedMessages.sort(function(a, b) {\n\t\t\t\t\t\t\treturn a.sequence - b.sequence;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (var i = 0, len = sequencedMessages.length; i < len; i++) {\n\t\t\t\t\t\t\tvar sentMessage = sequencedMessages[i];\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsentMessage.type == MESSAGE_TYPE.PUBLISH &&\n\t\t\t\t\t\t\t\tsentMessage.pubRecReceived\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {\n\t\t\t\t\t\t\t\t\tmessageIdentifier: sentMessage.messageIdentifier,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._schedule_message(sentMessage);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the connectOptions.onSuccess callback if there is one.\n\t\t\t\t\t\t// Will also now return if this connection was the result of an automatic\n\t\t\t\t\t\t// reconnect and which URI was successfully connected to.\n\t\t\t\t\t\tif (this.connectOptions.onSuccess) {\n\t\t\t\t\t\t\tthis.connectOptions.onSuccess({\n\t\t\t\t\t\t\t\tinvocationContext: this.connectOptions.invocationContext,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar reconnected = false;\n\t\t\t\t\t\tif (this._reconnecting) {\n\t\t\t\t\t\t\treconnected = true;\n\t\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\t\tthis._reconnecting = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the onConnected callback if there is one.\n\t\t\t\t\t\tthis._connected(reconnected, this._wsuri);\n\n\t\t\t\t\t\t// Process all queued messages now that the connection is established.\n\t\t\t\t\t\tthis._process_queue();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\t\tthis._receivePublish(wireMessage);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t// If this is a re flow of a PUBACK after we have restarted receivedMessage will not exist.\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t\t'Sent:' + this._localKey + wireMessage.messageIdentifier\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t// If this is a re flow of a PUBREC after we have restarted receivedMessage will not exist.\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tsentMessage.pubRecReceived = true;\n\t\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {\n\t\t\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.store('Sent:', sentMessage);\n\t\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\t\t\tvar receivedMessage = this._receivedMessages[\n\t\t\t\t\t\t\twireMessage.messageIdentifier\n\t\t\t\t\t\t];\n\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t'Received:' + this._localKey + wireMessage.messageIdentifier\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// If this is a re flow of a PUBREL after we have restarted receivedMessage will not exist.\n\t\t\t\t\t\tif (receivedMessage) {\n\t\t\t\t\t\t\tthis._receiveMessage(receivedMessage);\n\t\t\t\t\t\t\tdelete this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Always flow PubComp, we may have previously flowed PubComp but the server lost it and restarted.\n\t\t\t\t\t\tvar pubCompMessage = new WireMessage(MESSAGE_TYPE.PUBCOMP, {\n\t\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._schedule_message(pubCompMessage);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t'Sent:' + this._localKey + wireMessage.messageIdentifier\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tif (sentMessage.timeOut) sentMessage.timeOut.cancel();\n\t\t\t\t\t\t\t// This will need to be fixed when we add multiple topic support\n\t\t\t\t\t\t\tif (wireMessage.returnCode[0] === 0x80) {\n\t\t\t\t\t\t\t\tif (sentMessage.onFailure) {\n\t\t\t\t\t\t\t\t\tsentMessage.onFailure(wireMessage.returnCode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (sentMessage.onSuccess) {\n\t\t\t\t\t\t\t\tsentMessage.onSuccess(wireMessage.returnCode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tif (sentMessage.timeOut) sentMessage.timeOut.cancel();\n\t\t\t\t\t\t\tif (sentMessage.callback) {\n\t\t\t\t\t\t\t\tsentMessage.callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PINGRESP:\n\t\t\t\t\t\t/* The sendPinger or receivePinger may have sent a ping, the receivePinger has already been reset. */\n\t\t\t\t\t\tthis.sendPinger.reset();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t\t\t// Clients do not expect to receive disconnect packets.\n\t\t\t\t\t\tthis._disconnected(\n\t\t\t\t\t\t\tERROR.INVALID_MQTT_MESSAGE_TYPE.code,\n\t\t\t\t\t\t\tformat(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type])\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._disconnected(\n\t\t\t\t\t\t\tERROR.INVALID_MQTT_MESSAGE_TYPE.code,\n\t\t\t\t\t\t\tformat(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type])\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack =\n\t\t\t\t\terror.hasOwnProperty('stack') == 'undefined'\n\t\t\t\t\t\t? error.stack.toString()\n\t\t\t\t\t\t: 'No Error Stack Available';\n\t\t\t\tthis._disconnected(\n\t\t\t\t\tERROR.INTERNAL_ERROR.code,\n\t\t\t\t\tformat(ERROR.INTERNAL_ERROR, [error.message, errorStack])\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_error = function(error) {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(\n\t\t\t\t\tERROR.SOCKET_ERROR.code,\n\t\t\t\t\tformat(ERROR.SOCKET_ERROR, [error.data])\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_close = function() {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(ERROR.SOCKET_CLOSE.code, format(ERROR.SOCKET_CLOSE));\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._socket_send = function(wireMessage) {\n\t\t\tif (wireMessage.type == 1) {\n\t\t\t\tvar wireMessageMasked = this._traceMask(wireMessage, 'password');\n\t\t\t\tthis._trace('Client._socket_send', wireMessageMasked);\n\t\t\t} else this._trace('Client._socket_send', wireMessage);\n\n\t\t\tthis.socket.send(wireMessage.encode());\n\t\t\t/* We have proved to the server we are alive. */\n\t\t\tthis.sendPinger.reset();\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receivePublish = function(wireMessage) {\n\t\t\tswitch (wireMessage.payloadMessage.qos) {\n\t\t\t\tcase 'undefined':\n\t\t\t\tcase 0:\n\t\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tvar pubAckMessage = new WireMessage(MESSAGE_TYPE.PUBACK, {\n\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t});\n\t\t\t\t\tthis._schedule_message(pubAckMessage);\n\t\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t\t\tthis.store('Received:', wireMessage);\n\t\t\t\t\tvar pubRecMessage = new WireMessage(MESSAGE_TYPE.PUBREC, {\n\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t});\n\t\t\t\t\tthis._schedule_message(pubRecMessage);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error('Invaild qos=' + wireMessage.payloadMessage.qos);\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receiveMessage = function(wireMessage) {\n\t\t\tif (this.onMessageArrived) {\n\t\t\t\tthis.onMessageArrived(wireMessage.payloadMessage);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Client has connected.\n\t\t * @param {reconnect} [boolean] indicate if this was a result of reconnect operation.\n\t\t * @param {uri} [string] fully qualified WebSocket URI of the server.\n\t\t */\n\t\tClientImpl.prototype._connected = function(reconnect, uri) {\n\t\t\t// Execute the onConnected callback if there is one.\n\t\t\tif (this.onConnected) this.onConnected(reconnect, uri);\n\t\t};\n\n\t\t/**\n\t\t * Attempts to reconnect the client to the server.\n\t\t * For each reconnect attempt, will double the reconnect interval\n\t\t * up to 128 seconds.\n\t\t */\n\t\tClientImpl.prototype._reconnect = function() {\n\t\t\tthis._trace('Client._reconnect');\n\t\t\tif (!this.connected) {\n\t\t\t\tthis._reconnecting = true;\n\t\t\t\tthis.sendPinger.cancel();\n\t\t\t\tthis.receivePinger.cancel();\n\t\t\t\tif (this._reconnectInterval < 128)\n\t\t\t\t\tthis._reconnectInterval = this._reconnectInterval * 2;\n\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Client has disconnected either at its own request or because the server\n\t\t * or network disconnected it. Remove all non-durable state.\n\t\t * @param {errorCode} [number] the error number.\n\t\t * @param {errorText} [string] the error text.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._disconnected = function(errorCode, errorText) {\n\t\t\tthis._trace('Client._disconnected', errorCode, errorText);\n\n\t\t\tif (errorCode !== undefined && this._reconnecting) {\n\t\t\t\t//Continue automatic reconnect process\n\t\t\t\tthis._reconnectTimeout = new Timeout(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis._reconnectInterval,\n\t\t\t\t\tthis._reconnect\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.sendPinger.cancel();\n\t\t\tthis.receivePinger.cancel();\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\n\t\t\t// Clear message buffers.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\tif (this.socket) {\n\t\t\t\t// Cancel all socket callbacks so that they cannot be driven again by this socket.\n\t\t\t\tthis.socket.onopen = null;\n\t\t\t\tthis.socket.onmessage = null;\n\t\t\t\tthis.socket.onerror = null;\n\t\t\t\tthis.socket.onclose = null;\n\t\t\t\tif (this.socket.readyState === 1) this.socket.close();\n\t\t\t\tdelete this.socket;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.connectOptions.uris &&\n\t\t\t\tthis.hostIndex < this.connectOptions.uris.length - 1\n\t\t\t) {\n\t\t\t\t// Try the next host.\n\t\t\t\tthis.hostIndex++;\n\t\t\t\tthis._doConnect(this.connectOptions.uris[this.hostIndex]);\n\t\t\t} else {\n\t\t\t\tif (errorCode === undefined) {\n\t\t\t\t\terrorCode = ERROR.OK.code;\n\t\t\t\t\terrorText = format(ERROR.OK);\n\t\t\t\t}\n\n\t\t\t\t// Run any application callbacks last as they may attempt to reconnect and hence create a new socket.\n\t\t\t\tif (this.connected) {\n\t\t\t\t\tthis.connected = false;\n\t\t\t\t\t// Execute the connectionLostCallback if there is one, and we were connected.\n\t\t\t\t\tif (this.onConnectionLost) {\n\t\t\t\t\t\tthis.onConnectionLost({\n\t\t\t\t\t\t\terrorCode: errorCode,\n\t\t\t\t\t\t\terrorMessage: errorText,\n\t\t\t\t\t\t\treconnect: this.connectOptions.reconnect,\n\t\t\t\t\t\t\turi: this._wsuri,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (errorCode !== ERROR.OK.code && this.connectOptions.reconnect) {\n\t\t\t\t\t\t// Start automatic reconnect process for the very first time since last successful connect.\n\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\tthis._reconnect();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise we never had a connection, so indicate that the connect has failed.\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.connectOptions.mqttVersion === 4 &&\n\t\t\t\t\t\tthis.connectOptions.mqttVersionExplicit === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._trace('Failed to connect V4, dropping back to V3');\n\t\t\t\t\t\tthis.connectOptions.mqttVersion = 3;\n\t\t\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.connectOptions.onFailure) {\n\t\t\t\t\t\tthis.connectOptions.onFailure({\n\t\t\t\t\t\t\tinvocationContext: this.connectOptions.invocationContext,\n\t\t\t\t\t\t\terrorCode: errorCode,\n\t\t\t\t\t\t\terrorMessage: errorText,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._trace = function() {\n\t\t\t// Pass trace message back to client's callback function\n\t\t\tif (this.traceFunction) {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tfor (var i in args) {\n\t\t\t\t\tif (typeof args[i] !== 'undefined')\n\t\t\t\t\t\targs.splice(i, 1, JSON.stringify(args[i]));\n\t\t\t\t}\n\t\t\t\tvar record = args.join('');\n\t\t\t\tthis.traceFunction({ severity: 'Debug', message: record });\n\t\t\t}\n\n\t\t\t//buffer style trace\n\t\t\tif (this._traceBuffer !== null) {\n\t\t\t\tfor (var i = 0, max = arguments.length; i < max; i++) {\n\t\t\t\t\tif (this._traceBuffer.length == this._MAX_TRACE_ENTRIES) {\n\t\t\t\t\t\tthis._traceBuffer.shift();\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 0) this._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse if (typeof arguments[i] === 'undefined')\n\t\t\t\t\t\tthis._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse this._traceBuffer.push('  ' + JSON.stringify(arguments[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._traceMask = function(traceObject, masked) {\n\t\t\tvar traceObjectMasked = {};\n\t\t\tfor (var attr in traceObject) {\n\t\t\t\tif (traceObject.hasOwnProperty(attr)) {\n\t\t\t\t\tif (attr == masked) traceObjectMasked[attr] = '******';\n\t\t\t\t\telse traceObjectMasked[attr] = traceObject[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn traceObjectMasked;\n\t\t};\n\n\t\t// ------------------------------------------------------------------------\n\t\t// Public Programming interface.\n\t\t// ------------------------------------------------------------------------\n\n\t\t/**\n\t\t * The JavaScript application communicates to the server using a {@link Paho.Client} object.\n\t\t * <p>\n\t\t * Most applications will create just one Client object and then call its connect() method,\n\t\t * however applications can create more than one Client object if they wish.\n\t\t * In this case the combination of host, port and clientId attributes must be different for each Client object.\n\t\t * <p>\n\t\t * The send, subscribe and unsubscribe methods are implemented as asynchronous JavaScript methods\n\t\t * (even though the underlying protocol exchange might be synchronous in nature).\n\t\t * This means they signal their completion by calling back to the application,\n\t\t * via Success or Failure callback functions provided by the application on the method in question.\n\t\t * Such callbacks are called at most once per method invocation and do not persist beyond the lifetime\n\t\t * of the script that made the invocation.\n\t\t * <p>\n\t\t * In contrast there are some callback functions, most notably <i>onMessageArrived</i>,\n\t\t * that are defined on the {@link Paho.Client} object.\n\t\t * These may get called multiple times, and aren't directly related to specific method invocations made by the client.\n\t\t *\n\t\t * @name Paho.Client\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param {string} host - the address of the messaging server, as a fully qualified WebSocket URI, as a DNS name or dotted decimal IP address.\n\t\t * @param {number} port - the port number to connect to - only required if host is not a URI\n\t\t * @param {string} path - the path on the host to connect to - only used if host is not a URI. Default: '/mqtt'.\n\t\t * @param {string} clientId - the Messaging client identifier, between 1 and 23 characters in length.\n\t\t *\n\t\t * @property {string} host - <i>read only</i> the server's DNS hostname or dotted decimal IP address.\n\t\t * @property {number} port - <i>read only</i> the server's port.\n\t\t * @property {string} path - <i>read only</i> the server's path.\n\t\t * @property {string} clientId - <i>read only</i> used when connecting to the server.\n\t\t * @property {function} onConnectionLost - called when a connection has been lost.\n\t\t *                            after a connect() method has succeeded.\n\t\t *                            Establish the call back used when a connection has been lost. The connection may be\n\t\t *                            lost because the client initiates a disconnect or because the server or network\n\t\t *                            cause the client to be disconnected. The disconnect call back may be called without\n\t\t *                            the connectionComplete call back being invoked if, for example the client fails to\n\t\t *                            connect.\n\t\t *                            A single response object parameter is passed to the onConnectionLost callback containing the following fields:\n\t\t *                            <ol>\n\t\t *                            <li>errorCode\n\t\t *                            <li>errorMessage\n\t\t *                            </ol>\n\t\t * @property {function} onMessageDelivered - called when a message has been delivered.\n\t\t *                            All processing that this Client will ever do has been completed. So, for example,\n\t\t *                            in the case of a Qos=2 message sent by this client, the PubComp flow has been received from the server\n\t\t *                            and the message has been removed from persistent storage before this callback is invoked.\n\t\t *                            Parameters passed to the onMessageDelivered callback are:\n\t\t *                            <ol>\n\t\t *                            <li>{@link Paho.Message} that was delivered.\n\t\t *                            </ol>\n\t\t * @property {function} onMessageArrived - called when a message has arrived in this Paho.client.\n\t\t *                            Parameters passed to the onMessageArrived callback are:\n\t\t *                            <ol>\n\t\t *                            <li>{@link Paho.Message} that has arrived.\n\t\t *                            </ol>\n\t\t * @property {function} onConnected - called when a connection is successfully made to the server.\n\t\t *                                  after a connect() method.\n\t\t *                                  Parameters passed to the onConnected callback are:\n\t\t *                                  <ol>\n\t\t *                                  <li>reconnect (boolean) - If true, the connection was the result of a reconnect.</li>\n\t\t *                                  <li>URI (string) - The URI used to connect to the server.</li>\n\t\t *                                  </ol>\n\t\t * @property {boolean} disconnectedPublishing - if set, will enable disconnected publishing in\n\t\t *                                            in the event that the connection to the server is lost.\n\t\t * @property {number} disconnectedBufferSize - Used to set the maximum number of messages that the disconnected\n\t\t *                                             buffer will hold before rejecting new messages. Default size: 5000 messages\n\t\t * @property {function} trace - called whenever trace is called. TODO\n\t\t */\n\t\tvar Client = function(host, port, path, clientId) {\n\t\t\tvar uri;\n\n\t\t\tif (typeof host !== 'string')\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof host, 'host']));\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\t// host: must be full ws:// uri\n\t\t\t\t// port: clientId\n\t\t\t\tclientId = port;\n\t\t\t\turi = host;\n\t\t\t\tvar match = uri.match(\n\t\t\t\t\t/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/\n\t\t\t\t);\n\t\t\t\tif (match) {\n\t\t\t\t\thost = match[4] || match[2];\n\t\t\t\t\tport = parseInt(match[7]);\n\t\t\t\t\tpath = match[8];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [host, 'host']));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (arguments.length == 3) {\n\t\t\t\t\tclientId = path;\n\t\t\t\t\tpath = '/mqtt';\n\t\t\t\t}\n\t\t\t\tif (typeof port !== 'number' || port < 0)\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof port, 'port']));\n\t\t\t\tif (typeof path !== 'string')\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof path, 'path']));\n\n\t\t\t\tvar ipv6AddSBracket =\n\t\t\t\t\thost.indexOf(':') !== -1 &&\n\t\t\t\t\thost.slice(0, 1) !== '[' &&\n\t\t\t\t\thost.slice(-1) !== ']';\n\t\t\t\turi =\n\t\t\t\t\t'ws://' +\n\t\t\t\t\t(ipv6AddSBracket ? '[' + host + ']' : host) +\n\t\t\t\t\t':' +\n\t\t\t\t\tport +\n\t\t\t\t\tpath;\n\t\t\t}\n\n\t\t\tvar clientIdLength = 0;\n\t\t\tfor (var i = 0; i < clientId.length; i++) {\n\t\t\t\tvar charCode = clientId.charCodeAt(i);\n\t\t\t\tif (0xd800 <= charCode && charCode <= 0xdbff) {\n\t\t\t\t\ti++; // Surrogate pair.\n\t\t\t\t}\n\t\t\t\tclientIdLength++;\n\t\t\t}\n\t\t\tif (typeof clientId !== 'string' || clientIdLength > 65535)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [clientId, 'clientId']));\n\n\t\t\tvar client = new ClientImpl(uri, host, port, path, clientId);\n\n\t\t\t//Public Properties\n\t\t\tObject.defineProperties(this, {\n\t\t\t\thost: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn host;\n\t\t\t\t\t},\n\t\t\t\t\tset: function() {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tport: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn port;\n\t\t\t\t\t},\n\t\t\t\t\tset: function() {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpath: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t},\n\t\t\t\t\tset: function() {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\turi: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn uri;\n\t\t\t\t\t},\n\t\t\t\t\tset: function() {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientId: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.clientId;\n\t\t\t\t\t},\n\t\t\t\t\tset: function() {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonConnected: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.onConnected;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newOnConnected) {\n\t\t\t\t\t\tif (typeof newOnConnected === 'function')\n\t\t\t\t\t\t\tclient.onConnected = newOnConnected;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnConnected,\n\t\t\t\t\t\t\t\t\t'onConnected',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdisconnectedPublishing: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.disconnectedPublishing;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newDisconnectedPublishing) {\n\t\t\t\t\t\tclient.disconnectedPublishing = newDisconnectedPublishing;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdisconnectedBufferSize: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.disconnectedBufferSize;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newDisconnectedBufferSize) {\n\t\t\t\t\t\tclient.disconnectedBufferSize = newDisconnectedBufferSize;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonConnectionLost: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.onConnectionLost;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newOnConnectionLost) {\n\t\t\t\t\t\tif (typeof newOnConnectionLost === 'function')\n\t\t\t\t\t\t\tclient.onConnectionLost = newOnConnectionLost;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnConnectionLost,\n\t\t\t\t\t\t\t\t\t'onConnectionLost',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonMessageDelivered: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.onMessageDelivered;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newOnMessageDelivered) {\n\t\t\t\t\t\tif (typeof newOnMessageDelivered === 'function')\n\t\t\t\t\t\t\tclient.onMessageDelivered = newOnMessageDelivered;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnMessageDelivered,\n\t\t\t\t\t\t\t\t\t'onMessageDelivered',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonMessageArrived: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.onMessageArrived;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newOnMessageArrived) {\n\t\t\t\t\t\tif (typeof newOnMessageArrived === 'function')\n\t\t\t\t\t\t\tclient.onMessageArrived = newOnMessageArrived;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnMessageArrived,\n\t\t\t\t\t\t\t\t\t'onMessageArrived',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttrace: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn client.traceFunction;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(trace) {\n\t\t\t\t\t\tif (typeof trace === 'function') {\n\t\t\t\t\t\t\tclient.traceFunction = trace;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [typeof trace, 'onTrace'])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Connect this Messaging client to its server.\n\t\t\t *\n\t\t\t * @name Paho.Client#connect\n\t\t\t * @function\n\t\t\t * @param {object} connectOptions - Attributes used with the connection.\n\t\t\t * @param {number} connectOptions.timeout - If the connect has not succeeded within this\n\t\t\t *                    number of seconds, it is deemed to have failed.\n\t\t\t *                    The default is 30 seconds.\n\t\t\t * @param {string} connectOptions.userName - Authentication username for this connection.\n\t\t\t * @param {string} connectOptions.password - Authentication password for this connection.\n\t\t\t * @param {Paho.Message} connectOptions.willMessage - sent by the server when the client\n\t\t\t *                    disconnects abnormally.\n\t\t\t * @param {number} connectOptions.keepAliveInterval - the server disconnects this client if\n\t\t\t *                    there is no activity for this number of seconds.\n\t\t\t *                    The default value of 60 seconds is assumed if not set.\n\t\t\t * @param {boolean} connectOptions.cleanSession - if true(default) the client and server\n\t\t\t *                    persistent state is deleted on successful connect.\n\t\t\t * @param {boolean} connectOptions.useSSL - if present and true, use an SSL Websocket connection.\n\t\t\t * @param {object} connectOptions.invocationContext - passed to the onSuccess callback or onFailure callback.\n\t\t\t * @param {function} connectOptions.onSuccess - called when the connect acknowledgement\n\t\t\t *                    has been received from the server.\n\t\t\t * A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t\t * <ol>\n\t\t\t * <li>invocationContext as passed in to the onSuccess method in the connectOptions.\n\t\t\t * </ol>\n\t\t\t * @param {function} connectOptions.onFailure - called when the connect request has failed or timed out.\n\t\t\t * A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t\t * <ol>\n\t\t\t * <li>invocationContext as passed in to the onFailure method in the connectOptions.\n\t\t\t * <li>errorCode a number indicating the nature of the error.\n\t\t\t * <li>errorMessage text describing the error.\n\t\t\t * </ol>\n\t\t\t * @param {array} connectOptions.hosts - If present this contains either a set of hostnames or fully qualified\n\t\t\t * WebSocket URIs (ws://iot.eclipse.org:80/ws), that are tried in order in place\n\t\t\t * of the host and port paramater on the construtor. The hosts are tried one at at time in order until\n\t\t\t * one of then succeeds.\n\t\t\t * @param {array} connectOptions.ports - If present the set of ports matching the hosts. If hosts contains URIs, this property\n\t\t\t * is not used.\n\t\t\t * @param {boolean} connectOptions.reconnect - Sets whether the client will automatically attempt to reconnect\n\t\t\t * to the server if the connection is lost.\n\t\t\t *<ul>\n\t\t\t *<li>If set to false, the client will not attempt to automatically reconnect to the server in the event that the\n\t\t\t * connection is lost.</li>\n\t\t\t *<li>If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server.\n\t\t\t * It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay\n\t\t\t * will double until it is at 2 minutes at which point the delay will stay at 2 minutes.</li>\n\t\t\t *</ul>\n\t\t\t * @param {number} connectOptions.mqttVersion - The version of MQTT to use to connect to the MQTT Broker.\n\t\t\t *<ul>\n\t\t\t *<li>3 - MQTT V3.1</li>\n\t\t\t *<li>4 - MQTT V3.1.1</li>\n\t\t\t *</ul>\n\t\t\t * @param {boolean} connectOptions.mqttVersionExplicit - If set to true, will force the connection to use the\n\t\t\t * selected MQTT Version or will fail to connect.\n\t\t\t * @param {array} connectOptions.uris - If present, should contain a list of fully qualified WebSocket uris\n\t\t\t * (e.g. ws://iot.eclipse.org:80/ws), that are tried in order in place of the host and port parameter of the construtor.\n\t\t\t * The uris are tried one at a time in order until one of them succeeds. Do not use this in conjunction with hosts as\n\t\t\t * the hosts array will be converted to uris and will overwrite this property.\n\t\t\t * @throws {InvalidState} If the client is not in disconnected state. The client must have received connectionLost\n\t\t\t * or disconnected before calling connect for a second or subsequent time.\n\t\t\t */\n\t\t\tthis.connect = function(connectOptions) {\n\t\t\t\tconnectOptions = connectOptions || {};\n\t\t\t\tvalidate(connectOptions, {\n\t\t\t\t\ttimeout: 'number',\n\t\t\t\t\tuserName: 'string',\n\t\t\t\t\tpassword: 'string',\n\t\t\t\t\twillMessage: 'object',\n\t\t\t\t\tkeepAliveInterval: 'number',\n\t\t\t\t\tcleanSession: 'boolean',\n\t\t\t\t\tuseSSL: 'boolean',\n\t\t\t\t\tinvocationContext: 'object',\n\t\t\t\t\tonSuccess: 'function',\n\t\t\t\t\tonFailure: 'function',\n\t\t\t\t\thosts: 'object',\n\t\t\t\t\tports: 'object',\n\t\t\t\t\treconnect: 'boolean',\n\t\t\t\t\tmqttVersion: 'number',\n\t\t\t\t\tmqttVersionExplicit: 'boolean',\n\t\t\t\t\turis: 'object',\n\t\t\t\t});\n\n\t\t\t\t// If no keep alive interval is set, assume 60 seconds.\n\t\t\t\tif (connectOptions.keepAliveInterval === undefined)\n\t\t\t\t\tconnectOptions.keepAliveInterval = 60;\n\n\t\t\t\tif (connectOptions.mqttVersion > 4 || connectOptions.mqttVersion < 3) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\tconnectOptions.mqttVersion,\n\t\t\t\t\t\t\t'connectOptions.mqttVersion',\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (connectOptions.mqttVersion === undefined) {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = false;\n\t\t\t\t\tconnectOptions.mqttVersion = 4;\n\t\t\t\t} else {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = true;\n\t\t\t\t}\n\n\t\t\t\t//Check that if password is set, so is username\n\t\t\t\tif (\n\t\t\t\t\tconnectOptions.password !== undefined &&\n\t\t\t\t\tconnectOptions.userName === undefined\n\t\t\t\t)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\tconnectOptions.password,\n\t\t\t\t\t\t\t'connectOptions.password',\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\n\t\t\t\tif (connectOptions.willMessage) {\n\t\t\t\t\tif (!(connectOptions.willMessage instanceof Message))\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\tconnectOptions.willMessage,\n\t\t\t\t\t\t\t\t'connectOptions.willMessage',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\t// The will message must have a payload that can be represented as a string.\n\t\t\t\t\t// Cause the willMessage to throw an exception if this is not the case.\n\t\t\t\t\tconnectOptions.willMessage.stringPayload = null;\n\n\t\t\t\t\tif (typeof connectOptions.willMessage.destinationName === 'undefined')\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\ttypeof connectOptions.willMessage.destinationName,\n\t\t\t\t\t\t\t\t'connectOptions.willMessage.destinationName',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (typeof connectOptions.cleanSession === 'undefined')\n\t\t\t\t\tconnectOptions.cleanSession = true;\n\t\t\t\tif (connectOptions.hosts) {\n\t\t\t\t\tif (!(connectOptions.hosts instanceof Array))\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tconnectOptions.hosts,\n\t\t\t\t\t\t\t\t'connectOptions.hosts',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\tif (connectOptions.hosts.length < 1)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tconnectOptions.hosts,\n\t\t\t\t\t\t\t\t'connectOptions.hosts',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\n\t\t\t\t\tvar usingURIs = false;\n\t\t\t\t\tfor (var i = 0; i < connectOptions.hosts.length; i++) {\n\t\t\t\t\t\tif (typeof connectOptions.hosts[i] !== 'string')\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof connectOptions.hosts[i],\n\t\t\t\t\t\t\t\t\t'connectOptions.hosts[' + i + ']',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/.test(\n\t\t\t\t\t\t\t\tconnectOptions.hosts[i]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\tusingURIs = true;\n\t\t\t\t\t\t\t} else if (!usingURIs) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\t\tconnectOptions.hosts[i],\n\t\t\t\t\t\t\t\t\t\t'connectOptions.hosts[' + i + ']',\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (usingURIs) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.hosts[i],\n\t\t\t\t\t\t\t\t\t'connectOptions.hosts[' + i + ']',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!usingURIs) {\n\t\t\t\t\t\tif (!connectOptions.ports)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.ports,\n\t\t\t\t\t\t\t\t\t'connectOptions.ports',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!(connectOptions.ports instanceof Array))\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.ports,\n\t\t\t\t\t\t\t\t\t'connectOptions.ports',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (connectOptions.hosts.length !== connectOptions.ports.length)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.ports,\n\t\t\t\t\t\t\t\t\t'connectOptions.ports',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconnectOptions.uris = [];\n\n\t\t\t\t\t\tfor (var i = 0; i < connectOptions.hosts.length; i++) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttypeof connectOptions.ports[i] !== 'number' ||\n\t\t\t\t\t\t\t\tconnectOptions.ports[i] < 0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\t\ttypeof connectOptions.ports[i],\n\t\t\t\t\t\t\t\t\t\t'connectOptions.ports[' + i + ']',\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tvar host = connectOptions.hosts[i];\n\t\t\t\t\t\t\tvar port = connectOptions.ports[i];\n\n\t\t\t\t\t\t\tvar ipv6 = host.indexOf(':') !== -1;\n\t\t\t\t\t\t\turi =\n\t\t\t\t\t\t\t\t'ws://' + (ipv6 ? '[' + host + ']' : host) + ':' + port + path;\n\t\t\t\t\t\t\tconnectOptions.uris.push(uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconnectOptions.uris = connectOptions.hosts;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclient.connect(connectOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Subscribe for messages, request receipt of a copy of messages sent to the destinations described by the filter.\n\t\t\t *\n\t\t\t * @name Paho.Client#subscribe\n\t\t\t * @function\n\t\t\t * @param {string} filter describing the destinations to receive messages from.\n\t\t\t * <br>\n\t\t\t * @param {object} subscribeOptions - used to control the subscription\n\t\t\t *\n\t\t\t * @param {number} subscribeOptions.qos - the maximum qos of any publications sent\n\t\t\t *                                  as a result of making this subscription.\n\t\t\t * @param {object} subscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t\t *                                  or onFailure callback.\n\t\t\t * @param {function} subscribeOptions.onSuccess - called when the subscribe acknowledgement\n\t\t\t *                                  has been received from the server.\n\t\t\t *                                  A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t\t *                                  <ol>\n\t\t\t *                                  <li>invocationContext if set in the subscribeOptions.\n\t\t\t *                                  </ol>\n\t\t\t * @param {function} subscribeOptions.onFailure - called when the subscribe request has failed or timed out.\n\t\t\t *                                  A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t\t *                                  <ol>\n\t\t\t *                                  <li>invocationContext - if set in the subscribeOptions.\n\t\t\t *                                  <li>errorCode - a number indicating the nature of the error.\n\t\t\t *                                  <li>errorMessage - text describing the error.\n\t\t\t *                                  </ol>\n\t\t\t * @param {number} subscribeOptions.timeout - which, if present, determines the number of\n\t\t\t *                                  seconds after which the onFailure calback is called.\n\t\t\t *                                  The presence of a timeout does not prevent the onSuccess\n\t\t\t *                                  callback from being called when the subscribe completes.\n\t\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t\t */\n\t\t\tthis.subscribe = function(filter, subscribeOptions) {\n\t\t\t\tif (typeof filter !== 'string')\n\t\t\t\t\tthrow new Error('Invalid argument:' + filter);\n\t\t\t\tsubscribeOptions = subscribeOptions || {};\n\t\t\t\tvalidate(subscribeOptions, {\n\t\t\t\t\tqos: 'number',\n\t\t\t\t\tinvocationContext: 'object',\n\t\t\t\t\tonSuccess: 'function',\n\t\t\t\t\tonFailure: 'function',\n\t\t\t\t\ttimeout: 'number',\n\t\t\t\t});\n\t\t\t\tif (subscribeOptions.timeout && !subscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'subscribeOptions.timeout specified with no onFailure callback.'\n\t\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\ttypeof subscribeOptions.qos !== 'undefined' &&\n\t\t\t\t\t!(\n\t\t\t\t\t\tsubscribeOptions.qos === 0 ||\n\t\t\t\t\t\tsubscribeOptions.qos === 1 ||\n\t\t\t\t\t\tsubscribeOptions.qos === 2\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\tsubscribeOptions.qos,\n\t\t\t\t\t\t\t'subscribeOptions.qos',\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t\tclient.subscribe(filter, subscribeOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t * Unsubscribe for messages, stop receiving messages sent to destinations described by the filter.\n\t\t *\n\t\t * @name Paho.Client#unsubscribe\n\t\t * @function\n\t\t * @param {string} filter - describing the destinations to receive messages from.\n\t\t * @param {object} unsubscribeOptions - used to control the subscription\n\t\t * @param {object} unsubscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t\t\t\t\t\t\t\t\t\t  or onFailure callback.\n\t\t * @param {function} unsubscribeOptions.onSuccess - called when the unsubscribe acknowledgement has been received from the server.\n\t\t *                                    A single response object parameter is passed to the\n\t\t *                                    onSuccess callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    </ol>\n\t\t * @param {function} unsubscribeOptions.onFailure called when the unsubscribe request has failed or timed out.\n\t\t *                                    A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    <li>errorCode - a number indicating the nature of the error.\n\t\t *                                    <li>errorMessage - text describing the error.\n\t\t *                                    </ol>\n\t\t * @param {number} unsubscribeOptions.timeout - which, if present, determines the number of seconds\n\t\t *                                    after which the onFailure callback is called. The presence of\n\t\t *                                    a timeout does not prevent the onSuccess callback from being\n\t\t *                                    called when the unsubscribe completes\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\t\tthis.unsubscribe = function(filter, unsubscribeOptions) {\n\t\t\t\tif (typeof filter !== 'string')\n\t\t\t\t\tthrow new Error('Invalid argument:' + filter);\n\t\t\t\tunsubscribeOptions = unsubscribeOptions || {};\n\t\t\t\tvalidate(unsubscribeOptions, {\n\t\t\t\t\tinvocationContext: 'object',\n\t\t\t\t\tonSuccess: 'function',\n\t\t\t\t\tonFailure: 'function',\n\t\t\t\t\ttimeout: 'number',\n\t\t\t\t});\n\t\t\t\tif (unsubscribeOptions.timeout && !unsubscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'unsubscribeOptions.timeout specified with no onFailure callback.'\n\t\t\t\t\t);\n\t\t\t\tclient.unsubscribe(filter, unsubscribeOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Send a message to the consumers of the destination in the Message.\n\t\t\t *\n\t\t\t * @name Paho.Client#send\n\t\t\t * @function\n\t\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the destination to which the message is to be sent.\n\t\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t\t * @param {String|ArrayBuffer} payload - The message data to be sent.\n\t\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t\t * \t\t<dl>\n\t\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t\t *     \t\t\t<dt>1 At least once.\n\t\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t\t * \t\t</dl>\n\t\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t\t *                     to both current and future subscriptions.\n\t\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t\t *                     with the retained boolean set to true\n\t\t\t *                     and the subscrption was made after the message has been published.\n\t\t\t * @throws {InvalidState} if the client is not connected.\n\t\t\t */\n\t\t\tthis.send = function(topic, payload, qos, retained) {\n\t\t\t\tvar message;\n\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\tthrow new Error('Invalid argument.' + 'length');\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\tif (!(topic instanceof Message) && typeof topic !== 'string')\n\t\t\t\t\t\tthrow new Error('Invalid argument:' + typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === 'undefined')\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tmessage.destinationName,\n\t\t\t\t\t\t\t\t'Message.destinationName',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\tclient.send(message);\n\t\t\t\t} else {\n\t\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif (arguments.length >= 3) message.qos = qos;\n\t\t\t\t\tif (arguments.length >= 4) message.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Publish a message to the consumers of the destination in the Message.\n\t\t\t * Synonym for Paho.Mqtt.Client#send\n\t\t\t *\n\t\t\t * @name Paho.Client#publish\n\t\t\t * @function\n\t\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the topic to which the message is to be published.\n\t\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t\t * @param {String|ArrayBuffer} payload - The message data to be published.\n\t\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t\t * \t\t<dl>\n\t\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t\t *     \t\t\t<dt>1 At least once.\n\t\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t\t * \t\t</dl>\n\t\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t\t *                     to both current and future subscriptions.\n\t\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t\t *                     with the retained boolean set to true\n\t\t\t *                     and the subscrption was made after the message has been published.\n\t\t\t * @throws {InvalidState} if the client is not connected.\n\t\t\t */\n\t\t\tthis.publish = function(topic, payload, qos, retained) {\n\t\t\t\tvar message;\n\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\tthrow new Error('Invalid argument.' + 'length');\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\tif (!(topic instanceof Message) && typeof topic !== 'string')\n\t\t\t\t\t\tthrow new Error('Invalid argument:' + typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === 'undefined')\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tmessage.destinationName,\n\t\t\t\t\t\t\t\t'Message.destinationName',\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\tclient.send(message);\n\t\t\t\t} else {\n\t\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif (arguments.length >= 3) message.qos = qos;\n\t\t\t\t\tif (arguments.length >= 4) message.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Normal disconnect of this Messaging client from its server.\n\t\t\t *\n\t\t\t * @name Paho.Client#disconnect\n\t\t\t * @function\n\t\t\t * @throws {InvalidState} if the client is already disconnected.\n\t\t\t */\n\t\t\tthis.disconnect = function() {\n\t\t\t\tclient.disconnect();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Get the contents of the trace log.\n\t\t\t *\n\t\t\t * @name Paho.Client#getTraceLog\n\t\t\t * @function\n\t\t\t * @return {Object[]} tracebuffer containing the time ordered trace records.\n\t\t\t */\n\t\t\tthis.getTraceLog = function() {\n\t\t\t\treturn client.getTraceLog();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Start tracing.\n\t\t\t *\n\t\t\t * @name Paho.Client#startTrace\n\t\t\t * @function\n\t\t\t */\n\t\t\tthis.startTrace = function() {\n\t\t\t\tclient.startTrace();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Stop tracing.\n\t\t\t *\n\t\t\t * @name Paho.Client#stopTrace\n\t\t\t * @function\n\t\t\t */\n\t\t\tthis.stopTrace = function() {\n\t\t\t\tclient.stopTrace();\n\t\t\t};\n\n\t\t\tthis.isConnected = function() {\n\t\t\t\treturn client.connected;\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * An application message, sent or received.\n\t\t * <p>\n\t\t * All attributes may be null, which implies the default values.\n\t\t *\n\t\t * @name Paho.Message\n\t\t * @constructor\n\t\t * @param {String|ArrayBuffer} payload The message data to be sent.\n\t\t * <p>\n\t\t * @property {string} payloadString <i>read only</i> The payload as a string if the payload consists of valid UTF-8 characters.\n\t\t * @property {ArrayBuffer} payloadBytes <i>read only</i> The payload as an ArrayBuffer.\n\t\t * <p>\n\t\t * @property {string} destinationName <b>mandatory</b> The name of the destination to which the message is to be sent\n\t\t *                    (for messages about to be sent) or the name of the destination from which the message has been received.\n\t\t *                    (for messages received by the onMessage function).\n\t\t * <p>\n\t\t * @property {number} qos The Quality of Service used to deliver the message.\n\t\t * <dl>\n\t\t *     <dt>0 Best effort (default).\n\t\t *     <dt>1 At least once.\n\t\t *     <dt>2 Exactly once.\n\t\t * </dl>\n\t\t * <p>\n\t\t * @property {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * <p>\n\t\t * @property {Boolean} duplicate <i>read only</i> If true, this message might be a duplicate of one which has already been received.\n\t\t *                     This is only set on messages received from the server.\n\t\t *\n\t\t */\n\t\tvar Message = function(newPayload) {\n\t\t\tvar payload;\n\t\t\tif (\n\t\t\t\ttypeof newPayload === 'string' ||\n\t\t\t\tnewPayload instanceof ArrayBuffer ||\n\t\t\t\t(ArrayBuffer.isView(newPayload) && !(newPayload instanceof DataView))\n\t\t\t) {\n\t\t\t\tpayload = newPayload;\n\t\t\t} else {\n\t\t\t\tthrow format(ERROR.INVALID_ARGUMENT, [newPayload, 'newPayload']);\n\t\t\t}\n\n\t\t\tvar destinationName;\n\t\t\tvar qos = 0;\n\t\t\tvar retained = false;\n\t\t\tvar duplicate = false;\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tpayloadString: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\tif (typeof payload === 'string') return payload;\n\t\t\t\t\t\telse return parseUTF8(payload, 0, payload.length);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpayloadBytes: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\tif (typeof payload === 'string') {\n\t\t\t\t\t\t\tvar buffer = new ArrayBuffer(UTF8Length(payload));\n\t\t\t\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\t\t\t\tstringToUTF8(payload, byteStream, 0);\n\n\t\t\t\t\t\t\treturn byteStream;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn payload;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdestinationName: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn destinationName;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newDestinationName) {\n\t\t\t\t\t\tif (typeof newDestinationName === 'string')\n\t\t\t\t\t\t\tdestinationName = newDestinationName;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tnewDestinationName,\n\t\t\t\t\t\t\t\t\t'newDestinationName',\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tqos: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn qos;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newQos) {\n\t\t\t\t\t\tif (newQos === 0 || newQos === 1 || newQos === 2) qos = newQos;\n\t\t\t\t\t\telse throw new Error('Invalid argument:' + newQos);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tretained: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn retained;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newRetained) {\n\t\t\t\t\t\tif (typeof newRetained === 'boolean') retained = newRetained;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [newRetained, 'newRetained'])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttopic: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn destinationName;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newTopic) {\n\t\t\t\t\t\tdestinationName = newTopic;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tduplicate: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn duplicate;\n\t\t\t\t\t},\n\t\t\t\t\tset: function(newDuplicate) {\n\t\t\t\t\t\tduplicate = newDuplicate;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\n\t\t// Module contents.\n\t\treturn {\n\t\t\tClient: Client,\n\t\t\tMessage: Message,\n\t\t};\n\t\t// eslint-disable-next-line no-nested-ternary\n\t})(\n\t\ttypeof global !== 'undefined'\n\t\t\t? global\n\t\t\t: typeof self !== 'undefined'\n\t\t\t? self\n\t\t\t: typeof window !== 'undefined'\n\t\t\t? window\n\t\t\t: {}\n\t);\n\treturn PahoMQTT;\n});\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species');\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, SymbolObservable);\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractPubSubProvider');\nvar AbstractPubSubProvider = /** @class */ (function () {\n    function AbstractPubSubProvider(options) {\n        if (options === void 0) { options = {}; }\n        this._config = options;\n    }\n    AbstractPubSubProvider.prototype.configure = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = __assign(__assign({}, config), this._config);\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\n        return this.options;\n    };\n    AbstractPubSubProvider.prototype.getCategory = function () {\n        return 'PubSub';\n    };\n    Object.defineProperty(AbstractPubSubProvider.prototype, \"options\", {\n        get: function () {\n            return __assign({}, this._config);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractPubSubProvider;\n}());\nexport { AbstractPubSubProvider };\n//# sourceMappingURL=PubSubProvider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport * as Paho from '../vendor/paho-mqtt';\nimport { v4 as uuid } from 'uuid';\nimport * as Observable from 'zen-observable';\nimport { AbstractPubSubProvider } from './PubSubProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('MqttOverWSProvider');\nexport function mqttTopicMatch(filter, topic) {\n    var filterArray = filter.split('/');\n    var length = filterArray.length;\n    var topicArray = topic.split('/');\n    for (var i = 0; i < length; ++i) {\n        var left = filterArray[i];\n        var right = topicArray[i];\n        if (left === '#')\n            return topicArray.length >= length;\n        if (left !== '+' && left !== right)\n            return false;\n    }\n    return length === topicArray.length;\n}\nvar ClientsQueue = /** @class */ (function () {\n    function ClientsQueue() {\n        this.promises = new Map();\n    }\n    ClientsQueue.prototype.get = function (clientId, clientFactory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise;\n            return __generator(this, function (_a) {\n                promise = this.promises.get(clientId);\n                if (promise) {\n                    return [2 /*return*/, promise];\n                }\n                promise = clientFactory(clientId);\n                this.promises.set(clientId, promise);\n                return [2 /*return*/, promise];\n            });\n        });\n    };\n    Object.defineProperty(ClientsQueue.prototype, \"allClients\", {\n        get: function () {\n            return Array.from(this.promises.keys());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClientsQueue.prototype.remove = function (clientId) {\n        this.promises.delete(clientId);\n    };\n    return ClientsQueue;\n}());\nvar topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';\nvar MqttOverWSProvider = /** @class */ (function (_super) {\n    __extends(MqttOverWSProvider, _super);\n    function MqttOverWSProvider(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, __assign(__assign({}, options), { clientId: options.clientId || uuid() })) || this;\n        _this._clientsQueue = new ClientsQueue();\n        _this._topicObservers = new Map();\n        _this._clientIdObservers = new Map();\n        return _this;\n    }\n    Object.defineProperty(MqttOverWSProvider.prototype, \"clientId\", {\n        get: function () {\n            return this.options.clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"endpoint\", {\n        get: function () {\n            return this.options.aws_pubsub_endpoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"clientsQueue\", {\n        get: function () {\n            return this._clientsQueue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"isSSLEnabled\", {\n        get: function () {\n            return !this.options\n                .aws_appsync_dangerously_connect_to_http_endpoint_for_testing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MqttOverWSProvider.prototype.getTopicForValue = function (value) {\n        return typeof value === 'object' && value[topicSymbol];\n    };\n    MqttOverWSProvider.prototype.getProviderName = function () {\n        return 'MqttOverWSProvider';\n    };\n    MqttOverWSProvider.prototype.onDisconnect = function (_a) {\n        var clientId = _a.clientId, errorCode = _a.errorCode, args = __rest(_a, [\"clientId\", \"errorCode\"]);\n        if (errorCode !== 0) {\n            logger.warn(clientId, JSON.stringify(__assign({ errorCode: errorCode }, args), null, 2));\n            this._topicObservers.forEach(function (observerForTopic, _observerTopic) {\n                observerForTopic.forEach(function (observer) {\n                    observer.error('Disconnected, error code: ' + errorCode);\n                    observer.complete();\n                });\n            });\n        }\n        this._topicObservers = new Map();\n    };\n    MqttOverWSProvider.prototype.newClient = function (_a) {\n        var url = _a.url, clientId = _a.clientId;\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger.debug('Creating new MQTT client', clientId);\n                        client = new Paho.Client(url, clientId);\n                        // client.trace = (args) => logger.debug(clientId, JSON.stringify(args, null, 2));\n                        client.onMessageArrived = function (_a) {\n                            var topic = _a.destinationName, msg = _a.payloadString;\n                            _this._onMessage(topic, msg);\n                        };\n                        client.onConnectionLost = function (_a) {\n                            var errorCode = _a.errorCode, args = __rest(_a, [\"errorCode\"]);\n                            _this.onDisconnect(__assign({ clientId: clientId, errorCode: errorCode }, args));\n                        };\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                client.connect({\n                                    useSSL: _this.isSSLEnabled,\n                                    mqttVersion: 3,\n                                    onSuccess: function () { return resolve(client); },\n                                    onFailure: reject,\n                                });\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/, client];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.connect = function (clientId, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function (clientId) {\n                            return _this.newClient(__assign(__assign({}, options), { clientId: clientId }));\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.disconnect = function (clientId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function () { return null; })];\n                    case 1:\n                        client = _a.sent();\n                        if (client && client.isConnected()) {\n                            client.disconnect();\n                        }\n                        this.clientsQueue.remove(clientId);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.publish = function (topics, msg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var targetTopics, message, url, client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        targetTopics = [].concat(topics);\n                        message = JSON.stringify(msg);\n                        return [4 /*yield*/, this.endpoint];\n                    case 1:\n                        url = _a.sent();\n                        return [4 /*yield*/, this.connect(this.clientId, { url: url })];\n                    case 2:\n                        client = _a.sent();\n                        logger.debug('Publishing to topic(s)', targetTopics.join(','), message);\n                        targetTopics.forEach(function (topic) { return client.send(topic, message); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype._onMessage = function (topic, msg) {\n        try {\n            var matchedTopicObservers_1 = [];\n            this._topicObservers.forEach(function (observerForTopic, observerTopic) {\n                if (mqttTopicMatch(observerTopic, topic)) {\n                    matchedTopicObservers_1.push(observerForTopic);\n                }\n            });\n            var parsedMessage_1 = JSON.parse(msg);\n            if (typeof parsedMessage_1 === 'object') {\n                parsedMessage_1[topicSymbol] = topic;\n            }\n            matchedTopicObservers_1.forEach(function (observersForTopic) {\n                observersForTopic.forEach(function (observer) { return observer.next(parsedMessage_1); });\n            });\n        }\n        catch (error) {\n            logger.warn('Error handling message', error, msg);\n        }\n    };\n    MqttOverWSProvider.prototype.subscribe = function (topics, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var targetTopics = [].concat(topics);\n        logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n        return new Observable(function (observer) {\n            targetTopics.forEach(function (topic) {\n                var observersForTopic = _this._topicObservers.get(topic);\n                if (!observersForTopic) {\n                    observersForTopic = new Set();\n                    _this._topicObservers.set(topic, observersForTopic);\n                }\n                observersForTopic.add(observer);\n            });\n            var client;\n            var _a = options.clientId, clientId = _a === void 0 ? _this.clientId : _a;\n            var observersForClientId = _this._clientIdObservers.get(clientId);\n            if (!observersForClientId) {\n                observersForClientId = new Set();\n            }\n            observersForClientId.add(observer);\n            _this._clientIdObservers.set(clientId, observersForClientId);\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, url, _b, e_1;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _a = options.url;\n                            if (!(_a === void 0)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.endpoint];\n                        case 1:\n                            _b = _c.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _b = _a;\n                            _c.label = 3;\n                        case 3:\n                            url = _b;\n                            _c.label = 4;\n                        case 4:\n                            _c.trys.push([4, 6, , 7]);\n                            return [4 /*yield*/, this.connect(clientId, { url: url })];\n                        case 5:\n                            client = _c.sent();\n                            targetTopics.forEach(function (topic) {\n                                client.subscribe(topic);\n                            });\n                            return [3 /*break*/, 7];\n                        case 6:\n                            e_1 = _c.sent();\n                            observer.error(e_1);\n                            return [3 /*break*/, 7];\n                        case 7: return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n                if (client) {\n                    _this._clientIdObservers.get(clientId).delete(observer);\n                    targetTopics.forEach(function (topic) {\n                        if (client.isConnected()) {\n                            client.unsubscribe(topic);\n                        }\n                        var observersForTopic = _this._topicObservers.get(topic) ||\n                            new Set();\n                        observersForTopic.forEach(function (observer) { return observer.complete(); });\n                        observersForTopic.clear();\n                    });\n                    if (_this._clientIdObservers.get(clientId).size === 0) {\n                        _this.disconnect(clientId);\n                        _this._clientIdObservers.delete(clientId);\n                    }\n                }\n                return null;\n            };\n        });\n    };\n    return MqttOverWSProvider;\n}(AbstractPubSubProvider));\nexport { MqttOverWSProvider };\n//# sourceMappingURL=MqttOverWSProvider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\nvar logger = new Logger('AWSAppSyncProvider');\nvar AWSAppSyncProvider = /** @class */ (function (_super) {\n    __extends(AWSAppSyncProvider, _super);\n    function AWSAppSyncProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._topicClient = new Map();\n        _this._topicAlias = new Map();\n        return _this;\n    }\n    Object.defineProperty(AWSAppSyncProvider.prototype, \"endpoint\", {\n        get: function () {\n            throw new Error('Not supported');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AWSAppSyncProvider.prototype.getProviderName = function () {\n        return 'AWSAppSyncProvider';\n    };\n    AWSAppSyncProvider.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error('Operation not supported');\n            });\n        });\n    };\n    AWSAppSyncProvider.prototype._cleanUp = function (clientId) {\n        var _this = this;\n        var topicsForClient = Array.from(this._topicClient.entries())\n            .filter(function (_a) {\n            var c = _a[1];\n            return c.clientId === clientId;\n        })\n            .map(function (_a) {\n            var t = _a[0];\n            return t;\n        });\n        topicsForClient.forEach(function (t) { return _this._cleanUpForTopic(t); });\n    };\n    AWSAppSyncProvider.prototype._cleanUpForTopic = function (topic) {\n        this._topicClient.delete(topic);\n        this._topicAlias.delete(topic);\n    };\n    AWSAppSyncProvider.prototype.onDisconnect = function (_a) {\n        var _this = this;\n        var clientId = _a.clientId, errorCode = _a.errorCode, args = __rest(_a, [\"clientId\", \"errorCode\"]);\n        if (errorCode !== 0) {\n            var topicsForClient = Array.from(this._topicClient.entries())\n                .filter(function (_a) {\n                var c = _a[1];\n                return c.clientId === clientId;\n            })\n                .map(function (_a) {\n                var t = _a[0];\n                return t;\n            });\n            topicsForClient.forEach(function (topic) {\n                if (_this._topicObservers.has(topic)) {\n                    _this._topicObservers.get(topic).forEach(function (obs) {\n                        if (!obs.closed) {\n                            obs.error(args);\n                        }\n                    });\n                    _this._topicObservers.delete(topic);\n                }\n            });\n            this._cleanUp(clientId);\n        }\n    };\n    AWSAppSyncProvider.prototype.disconnect = function (clientId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function () { return null; })];\n                    case 1:\n                        client = _a.sent();\n                        return [4 /*yield*/, _super.prototype.disconnect.call(this, clientId)];\n                    case 2:\n                        _a.sent();\n                        this._cleanUp(clientId);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSAppSyncProvider.prototype.subscribe = function (topics, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var result = new Observable(function (observer) {\n            var targetTopics = [].concat(topics);\n            logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, mqttConnections, newSubscriptions, newAliases, map;\n                var _this = this;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // Add these topics to map\n                            targetTopics.forEach(function (t) {\n                                if (!_this._topicObservers.has(t)) {\n                                    _this._topicObservers.set(t, new Set());\n                                }\n                                _this._topicObservers.get(t).add(observer);\n                            });\n                            _a = options.mqttConnections, mqttConnections = _a === void 0 ? [] : _a, newSubscriptions = options.newSubscriptions;\n                            newAliases = Object.entries(newSubscriptions).map(function (_a) {\n                                var alias = _a[0], v = _a[1];\n                                return [v.topic, alias];\n                            });\n                            // Merge new aliases with old ones\n                            this._topicAlias = new Map(__spreadArrays(Array.from(this._topicAlias.entries()), newAliases));\n                            map = Object.entries(targetTopics.reduce(function (acc, elem) {\n                                var connectionInfoForTopic = mqttConnections.find(function (c) { return c.topics.indexOf(elem) > -1; });\n                                if (connectionInfoForTopic) {\n                                    var clientId = connectionInfoForTopic.client, url = connectionInfoForTopic.url;\n                                    if (!acc[clientId]) {\n                                        acc[clientId] = {\n                                            url: url,\n                                            topics: new Set(),\n                                        };\n                                    }\n                                    acc[clientId].topics.add(elem);\n                                }\n                                return acc;\n                            }, {}));\n                            // reconnect everything we have in the map\n                            return [4 /*yield*/, Promise.all(map.map(function (_a) {\n                                    var clientId = _a[0], _b = _a[1], url = _b.url, topics = _b.topics;\n                                    return __awaiter(_this, void 0, void 0, function () {\n                                        var client, err_1;\n                                        var _this = this;\n                                        return __generator(this, function (_c) {\n                                            switch (_c.label) {\n                                                case 0:\n                                                    client = null;\n                                                    _c.label = 1;\n                                                case 1:\n                                                    _c.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.connect(clientId, {\n                                                            clientId: clientId,\n                                                            url: url,\n                                                        })];\n                                                case 2:\n                                                    client = _c.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    err_1 = _c.sent();\n                                                    observer.error({ message: 'Failed to connect', error: err_1 });\n                                                    observer.complete();\n                                                    return [2 /*return*/, undefined];\n                                                case 4:\n                                                    // subscribe to all topics for this client\n                                                    // store topic-client mapping\n                                                    topics.forEach(function (topic) {\n                                                        if (client.isConnected()) {\n                                                            client.subscribe(topic);\n                                                            _this._topicClient.set(topic, client);\n                                                        }\n                                                    });\n                                                    return [2 /*return*/, client];\n                                            }\n                                        });\n                                    });\n                                }))];\n                        case 1:\n                            // reconnect everything we have in the map\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n                targetTopics.forEach(function (t) {\n                    var client = _this._topicClient.get(t);\n                    if (client && client.isConnected()) {\n                        client.unsubscribe(t);\n                        _this._topicClient.delete(t);\n                        if (!Array.from(_this._topicClient.values()).some(function (c) { return c === client; })) {\n                            _this.disconnect(client.clientId);\n                        }\n                    }\n                    _this._topicObservers.delete(t);\n                });\n            };\n        });\n        return Observable.from(result).map(function (value) {\n            var topic = _this.getTopicForValue(value);\n            var alias = _this._topicAlias.get(topic);\n            value.data = Object.entries(value.data).reduce(function (obj, _a) {\n                var origKey = _a[0], val = _a[1];\n                return ((obj[(alias || origKey)] = val), obj);\n            }, {});\n            return value;\n        });\n    };\n    return AWSAppSyncProvider;\n}(MqttOverWSProvider));\nexport { AWSAppSyncProvider };\n//# sourceMappingURL=AWSAppSyncProvider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\nimport { Signer, Credentials } from '@aws-amplify/core';\nvar SERVICE_NAME = 'iotdevicegateway';\nvar AWSIoTProvider = /** @class */ (function (_super) {\n    __extends(AWSIoTProvider, _super);\n    function AWSIoTProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AWSIoTProvider.prototype, \"region\", {\n        get: function () {\n            return this.options.aws_pubsub_region;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AWSIoTProvider.prototype.getProviderName = function () {\n        return 'AWSIoTProvider';\n    };\n    Object.defineProperty(AWSIoTProvider.prototype, \"endpoint\", {\n        get: function () {\n            var _this = this;\n            return (function () { return __awaiter(_this, void 0, void 0, function () {\n                var endpoint, serviceInfo, _a, access_key, secret_key, session_token, result;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            endpoint = this.options.aws_pubsub_endpoint;\n                            serviceInfo = {\n                                service: SERVICE_NAME,\n                                region: this.region,\n                            };\n                            return [4 /*yield*/, Credentials.get()];\n                        case 1:\n                            _a = _b.sent(), access_key = _a.accessKeyId, secret_key = _a.secretAccessKey, session_token = _a.sessionToken;\n                            result = Signer.signUrl(endpoint, { access_key: access_key, secret_key: secret_key, session_token: session_token }, serviceInfo);\n                            return [2 /*return*/, result];\n                    }\n                });\n            }); })();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AWSIoTProvider;\n}(MqttOverWSProvider));\nexport { AWSIoTProvider };\n//# sourceMappingURL=AWSIotProvider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { AWSAppSyncProvider } from './Providers';\nvar logger = new Logger('PubSub');\nvar PubSub = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {PubSubOptions} options - Configuration object for PubSub\n     */\n    function PubSub(options) {\n        this._options = options;\n        logger.debug('PubSub Options', this._options);\n        this._pluggables = [];\n        this.subscribe = this.subscribe.bind(this);\n    }\n    Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\n        /**\n         * Lazy instantiate awsAppSyncProvider when it is required by the API category\n         */\n        get: function () {\n            if (!this._awsAppSyncProvider) {\n                this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n            }\n            return this._awsAppSyncProvider;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PubSub.prototype.getModuleName = function () {\n        return 'PubSub';\n    };\n    /**\n     * Configure PubSub part with configurations\n     *\n     * @param {PubSubOptions} config - Configuration for PubSub\n     * @return {Object} - The current configuration\n     */\n    PubSub.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.PubSub || options : {};\n        logger.debug('configure PubSub', { opt: opt });\n        this._options = Object.assign({}, this._options, opt);\n        this._pluggables.map(function (pluggable) { return pluggable.configure(_this._options); });\n        return this._options;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    PubSub.prototype.addPluggable = function (pluggable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                if (pluggable && pluggable.getCategory() === 'PubSub') {\n                    this._pluggables.push(pluggable);\n                    config = pluggable.configure(this._options);\n                    return [2 /*return*/, config];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    PubSub.prototype.getProviderByName = function (providerName) {\n        if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n            return this.awsAppSyncProvider;\n        }\n        return this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n    };\n    PubSub.prototype.getProviders = function (options) {\n        if (options === void 0) { options = {}; }\n        var providerName = options.provider;\n        if (!providerName) {\n            return this._pluggables;\n        }\n        var provider = this.getProviderByName(providerName);\n        if (!provider) {\n            throw new Error(\"Could not find provider named \" + providerName);\n        }\n        return [provider];\n    };\n    PubSub.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n                        return provider.publish(topics, msg, options);\n                    }))];\n            });\n        });\n    };\n    PubSub.prototype.subscribe = function (topics, options) {\n        logger.debug('subscribe options', options);\n        var providers = this.getProviders(options);\n        return new Observable(function (observer) {\n            var observables = providers.map(function (provider) { return ({\n                provider: provider,\n                observable: provider.subscribe(topics, options),\n            }); });\n            var subscriptions = observables.map(function (_a) {\n                var provider = _a.provider, observable = _a.observable;\n                return observable.subscribe({\n                    start: console.error,\n                    next: function (value) { return observer.next({ provider: provider, value: value }); },\n                    error: function (error) { return observer.error({ provider: provider, error: error }); },\n                });\n            });\n            return function () {\n                return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\n            };\n        });\n    };\n    return PubSub;\n}());\nexport default PubSub;\n//# sourceMappingURL=PubSub.js.map","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport PubSubClass from './PubSub';\nimport Amplify, { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('PubSub');\nvar _instance = null;\nif (!_instance) {\n    logger.debug('Create PubSub Instance');\n    _instance = new PubSubClass(null);\n}\nvar PubSub = _instance;\nAmplify.register(PubSub);\nexport default PubSub;\nexport * from './Providers/AWSIotProvider';\nexport { PubSubClass };\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}